{"version":3,"names":["_interopRequireDefault","require","exports","__esModule","default","initializeConnect","_extends2","_objectWithoutPropertiesLoose2","_hoistNonReactStatics","_react","_interopRequireWildcard","_reactIs","_selectorFactory","_mapDispatchToProps","_mapStateToProps","_mergeProps","_Subscription","_useIsomorphicLayoutEffect","_shallowEqual","_warning","_Context","_useSyncExternalStore","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","useSyncExternalStore","notInitialized","fn","EMPTY_ARRAY","NO_SUBSCRIPTION_ARRAY","stringifyComponent","Comp","JSON","stringify","err","String","useIsomorphicLayoutEffectWithArgs","effectFunc","effectArgs","dependencies","useIsomorphicLayoutEffect","captureWrapperProps","lastWrapperProps","lastChildProps","renderIsScheduled","wrapperProps","childPropsFromStoreUpdate","notifyNestedSubs","current","subscribeUpdates","shouldHandleStateChanges","store","subscription","childPropsSelector","isMounted","additionalSubscribeListener","didUnsubscribe","lastThrownError","checkForUpdates","latestStoreState","getState","newChildProps","error","e","onStateChange","trySubscribe","unsubscribeWrapper","tryUnsubscribe","initStateUpdates","strictEqual","a","b","hasWarnedAboutDeprecatedPureOption","connect","mapStateToProps","mapDispatchToProps","mergeProps","pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual","forwardRef","context","ReactReduxContext","process","env","NODE_ENV","undefined","Context","initMapStateToProps","mapStateToPropsFactory","initMapDispatchToProps","mapDispatchToPropsFactory","initMergeProps","mergePropsFactory","Boolean","wrapWithConnect","WrappedComponent","isValidElementType","Error","wrappedComponentName","displayName","name","selectorFactoryOptions","ConnectFunction","props","useMemo","reactReduxForwardedRef","propsContext","ContextToUse","Consumer","isContextConsumer","createElement","contextValue","useContext","didStoreComeFromProps","dispatch","didStoreComeFromContext","getServerState","createSubscription","bind","overriddenContextValue","useRef","isProcessingDispatch","latestSubscriptionCallbackError","actualChildPropsSelector","selector","subscribeForReact","subscribe","reactListener","actualChildProps","message","stack","renderedWrappedComponent","ref","renderedChild","Provider","value","_Connect","memo","Connect","_forwarded","forwardConnectRef","forwarded","_default"],"sources":["connect.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = exports.initializeConnect = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _hoistNonReactStatics = _interopRequireDefault(require(\"hoist-non-react-statics\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactIs = require(\"react-is\");\n\nvar _selectorFactory = _interopRequireDefault(require(\"../connect/selectorFactory\"));\n\nvar _mapDispatchToProps = require(\"../connect/mapDispatchToProps\");\n\nvar _mapStateToProps = require(\"../connect/mapStateToProps\");\n\nvar _mergeProps = require(\"../connect/mergeProps\");\n\nvar _Subscription = require(\"../utils/Subscription\");\n\nvar _useIsomorphicLayoutEffect = require(\"../utils/useIsomorphicLayoutEffect\");\n\nvar _shallowEqual = _interopRequireDefault(require(\"../utils/shallowEqual\"));\n\nvar _warning = _interopRequireDefault(require(\"../utils/warning\"));\n\nvar _Context = require(\"./Context\");\n\nvar _useSyncExternalStore = require(\"../utils/useSyncExternalStore\");\n\nconst _excluded = [\"reactReduxForwardedRef\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nlet useSyncExternalStore = _useSyncExternalStore.notInitialized;\n\nconst initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\n\nexports.initializeConnect = initializeConnect;\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = _shallowEqual.default,\n  areStatePropsEqual = _shallowEqual.default,\n  areMergedPropsEqual = _shallowEqual.default,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = _Context.ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      (0, _warning.default)('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = (0, _mapStateToProps.mapStateToPropsFactory)(mapStateToProps);\n  const initMapDispatchToProps = (0, _mapDispatchToProps.mapDispatchToPropsFactory)(mapDispatchToProps);\n  const initMergeProps = (0, _mergeProps.mergePropsFactory)(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !(0, _reactIs.isValidElementType)(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = (0, _react.useMemo)(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = (0, _objectWithoutPropertiesLoose2.default)(props, _excluded);\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = (0, _react.useMemo)(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        (0, _reactIs.isContextConsumer)( /*#__PURE__*/_react.default.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = (0, _react.useContext)(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = (0, _react.useMemo)(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return (0, _selectorFactory.default)(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = (0, _react.useMemo)(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = (0, _Subscription.createSubscription)(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = (0, _react.useMemo)(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return (0, _extends2.default)({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = (0, _react.useRef)();\n      const lastWrapperProps = (0, _react.useRef)(wrapperProps);\n      const childPropsFromStoreUpdate = (0, _react.useRef)();\n      const renderIsScheduled = (0, _react.useRef)(false);\n      const isProcessingDispatch = (0, _react.useRef)(false);\n      const isMounted = (0, _react.useRef)(false);\n      const latestSubscriptionCallbackError = (0, _react.useRef)();\n      (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = (0, _react.useMemo)(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = (0, _react.useMemo)(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      (0, _useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = (0, _react.useMemo)(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          _react.default.createElement(WrappedComponent, (0, _extends2.default)({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = (0, _react.useMemo)(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/_react.default.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = _react.default.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = _react.default.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/_react.default.createElement(Connect, (0, _extends2.default)({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return (0, _hoistNonReactStatics.default)(forwarded, WrappedComponent);\n    }\n\n    return (0, _hoistNonReactStatics.default)(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nvar _default = connect;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAA8C,CAAC;AAEpFC,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACG,iBAAiB,GAAG,KAAK,CAAC;AAEpD,IAAIC,SAAS,GAAGN,sBAAsB,CAACC,OAAO,CAAC,gCAAgC,CAAC,CAAC;AAEjF,IAAIM,8BAA8B,GAAGP,sBAAsB,CAACC,OAAO,CAAC,qDAAqD,CAAC,CAAC;AAE3H,IAAIO,qBAAqB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAEtF,IAAIQ,MAAM,GAAGC,uBAAuB,CAACT,OAAO,CAAC,OAAO,CAAC,CAAC;AAEtD,IAAIU,QAAQ,GAAGV,OAAO,CAAC,UAAU,CAAC;AAElC,IAAIW,gBAAgB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAEpF,IAAIY,mBAAmB,GAAGZ,OAAO,CAAC,+BAA+B,CAAC;AAElE,IAAIa,gBAAgB,GAAGb,OAAO,CAAC,4BAA4B,CAAC;AAE5D,IAAIc,WAAW,GAAGd,OAAO,CAAC,uBAAuB,CAAC;AAElD,IAAIe,aAAa,GAAGf,OAAO,CAAC,uBAAuB,CAAC;AAEpD,IAAIgB,0BAA0B,GAAGhB,OAAO,CAAC,oCAAoC,CAAC;AAE9E,IAAIiB,aAAa,GAAGlB,sBAAsB,CAACC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAE5E,IAAIkB,QAAQ,GAAGnB,sBAAsB,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAElE,IAAImB,QAAQ,GAAGnB,OAAO,CAAC,WAAW,CAAC;AAEnC,IAAIoB,qBAAqB,GAAGpB,OAAO,CAAC,+BAA+B,CAAC;AAEpE,IAAMqB,SAAS,GAAG,CAAC,wBAAwB,CAAC;AAE5C,SAASC,wBAAwB,CAACC,WAAW,EAAE;EAAE,IAAI,OAAOC,OAAO,KAAK,UAAU,EAAE,OAAO,IAAI;EAAE,IAAIC,iBAAiB,GAAG,IAAID,OAAO,EAAE;EAAE,IAAIE,gBAAgB,GAAG,IAAIF,OAAO,EAAE;EAAE,OAAO,CAACF,wBAAwB,GAAG,kCAAUC,WAAW,EAAE;IAAE,OAAOA,WAAW,GAAGG,gBAAgB,GAAGD,iBAAiB;EAAE,CAAC,EAAEF,WAAW,CAAC;AAAE;AAEtT,SAASd,uBAAuB,CAACkB,GAAG,EAAEJ,WAAW,EAAE;EAAE,IAAI,CAACA,WAAW,IAAII,GAAG,IAAIA,GAAG,CAACzB,UAAU,EAAE;IAAE,OAAOyB,GAAG;EAAE;EAAE,IAAIA,GAAG,KAAK,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAAE,OAAO;MAAExB,OAAO,EAAEwB;IAAI,CAAC;EAAE;EAAE,IAAIC,KAAK,GAAGN,wBAAwB,CAACC,WAAW,CAAC;EAAE,IAAIK,KAAK,IAAIA,KAAK,CAACC,GAAG,CAACF,GAAG,CAAC,EAAE;IAAE,OAAOC,KAAK,CAACE,GAAG,CAACH,GAAG,CAAC;EAAE;EAAE,IAAII,MAAM,GAAG,CAAC,CAAC;EAAE,IAAIC,qBAAqB,GAAGC,MAAM,CAACC,cAAc,IAAID,MAAM,CAACE,wBAAwB;EAAE,KAAK,IAAIC,GAAG,IAAIT,GAAG,EAAE;IAAE,IAAIS,GAAG,KAAK,SAAS,IAAIH,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAACZ,GAAG,EAAES,GAAG,CAAC,EAAE;MAAE,IAAII,IAAI,GAAGR,qBAAqB,GAAGC,MAAM,CAACE,wBAAwB,CAACR,GAAG,EAAES,GAAG,CAAC,GAAG,IAAI;MAAE,IAAII,IAAI,KAAKA,IAAI,CAACV,GAAG,IAAIU,IAAI,CAACC,GAAG,CAAC,EAAE;QAAER,MAAM,CAACC,cAAc,CAACH,MAAM,EAAEK,GAAG,EAAEI,IAAI,CAAC;MAAE,CAAC,MAAM;QAAET,MAAM,CAACK,GAAG,CAAC,GAAGT,GAAG,CAACS,GAAG,CAAC;MAAE;IAAE;EAAE;EAAEL,MAAM,CAAC5B,OAAO,GAAGwB,GAAG;EAAE,IAAIC,KAAK,EAAE;IAAEA,KAAK,CAACa,GAAG,CAACd,GAAG,EAAEI,MAAM,CAAC;EAAE;EAAE,OAAOA,MAAM;AAAE;AAEnyB,IAAIW,oBAAoB,GAAGtB,qBAAqB,CAACuB,cAAc;AAE/D,IAAMvC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAGwC,EAAE,EAAI;EAC9BF,oBAAoB,GAAGE,EAAE;AAC3B,CAAC;AAGD3C,OAAO,CAACG,iBAAiB,GAAGA,iBAAiB;AAC7C,IAAMyC,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAC7B,IAAMC,qBAAqB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;AAG1C,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAGC,IAAI,EAAI;EACjC,IAAI;IACF,OAAOC,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC;EAC7B,CAAC,CAAC,OAAOG,GAAG,EAAE;IACZ,OAAOC,MAAM,CAACJ,IAAI,CAAC;EACrB;AACF,CAAC;AAMD,SAASK,iCAAiC,CAACC,UAAU,EAAEC,UAAU,EAAEC,YAAY,EAAE;EAC/E,CAAC,CAAC,EAAExC,0BAA0B,CAACyC,yBAAyB,EAAE;IAAA,OAAMH,UAAU,gDAAIC,UAAU,EAAC;EAAA,GAAEC,YAAY,CAAC;AAC1G;AAGA,SAASE,mBAAmB,CAACC,gBAAgB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,YAAY,EAC9FC,yBAAyB,EAAEC,gBAAgB,EAAE;EAE3CL,gBAAgB,CAACM,OAAO,GAAGH,YAAY;EACvCD,iBAAiB,CAACI,OAAO,GAAG,KAAK;EAEjC,IAAIF,yBAAyB,CAACE,OAAO,EAAE;IACrCF,yBAAyB,CAACE,OAAO,GAAG,IAAI;IACxCD,gBAAgB,EAAE;EACpB;AACF;AAIA,SAASE,gBAAgB,CAACC,wBAAwB,EAAEC,KAAK,EAAEC,YAAY,EAAEC,kBAAkB,EAAEX,gBAAgB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEU,SAAS,EAAER,yBAAyB,EAAEC,gBAAgB,EACxMQ,2BAA2B,EAAE;EAE3B,IAAI,CAACL,wBAAwB,EAAE,OAAO,YAAM,CAAC,CAAC;EAE9C,IAAIM,cAAc,GAAG,KAAK;EAC1B,IAAIC,eAAe,GAAG,IAAI;EAE1B,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5B,IAAIF,cAAc,IAAI,CAACF,SAAS,CAACN,OAAO,EAAE;MAGxC;IACF;IAGA,IAAMW,gBAAgB,GAAGR,KAAK,CAACS,QAAQ,EAAE;IACzC,IAAIC,aAAa,EAAEC,KAAK;IAExB,IAAI;MAGFD,aAAa,GAAGR,kBAAkB,CAACM,gBAAgB,EAAEjB,gBAAgB,CAACM,OAAO,CAAC;IAChF,CAAC,CAAC,OAAOe,CAAC,EAAE;MACVD,KAAK,GAAGC,CAAC;MACTN,eAAe,GAAGM,CAAC;IACrB;IAEA,IAAI,CAACD,KAAK,EAAE;MACVL,eAAe,GAAG,IAAI;IACxB;IAGA,IAAII,aAAa,KAAKlB,cAAc,CAACK,OAAO,EAAE;MAC5C,IAAI,CAACJ,iBAAiB,CAACI,OAAO,EAAE;QAC9BD,gBAAgB,EAAE;MACpB;IACF,CAAC,MAAM;MAKLJ,cAAc,CAACK,OAAO,GAAGa,aAAa;MACtCf,yBAAyB,CAACE,OAAO,GAAGa,aAAa;MACjDjB,iBAAiB,CAACI,OAAO,GAAG,IAAI;MAGhCO,2BAA2B,EAAE;IAC/B;EACF,CAAC;EAGDH,YAAY,CAACY,aAAa,GAAGN,eAAe;EAC5CN,YAAY,CAACa,YAAY,EAAE;EAG3BP,eAAe,EAAE;EAEjB,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAkB,GAAS;IAC/BV,cAAc,GAAG,IAAI;IACrBJ,YAAY,CAACe,cAAc,EAAE;IAC7Bf,YAAY,CAACY,aAAa,GAAG,IAAI;IAEjC,IAAIP,eAAe,EAAE;MAMnB,MAAMA,eAAe;IACvB;EACF,CAAC;EAED,OAAOS,kBAAkB;AAC3B;AAGA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAgB;EAAA,OAASxC,WAAW;AAAA;AAE1C,SAASyC,WAAW,CAACC,CAAC,EAAEC,CAAC,EAAE;EACzB,OAAOD,CAAC,KAAKC,CAAC;AAChB;AAMA,IAAIC,kCAAkC,GAAG,KAAK;AAsB9C,SAASC,OAAO,CAACC,eAAe,EAAEC,kBAAkB,EAAEC,UAAU,EAYxD;EAAA,+EAAJ,CAAC,CAAC;IATJC,IAAI,QAAJA,IAAI;IAAA,2BACJC,cAAc;IAAdA,cAAc,oCAAGT,WAAW;IAAA,6BAC5BU,gBAAgB;IAAhBA,gBAAgB,sCAAG/E,aAAa,CAACd,OAAO;IAAA,6BACxC8F,kBAAkB;IAAlBA,kBAAkB,sCAAGhF,aAAa,CAACd,OAAO;IAAA,6BAC1C+F,mBAAmB;IAAnBA,mBAAmB,sCAAGjF,aAAa,CAACd,OAAO;IAAA,uBAE3CgG,UAAU;IAAVA,UAAU,gCAAG,KAAK;IAAA,oBAElBC,OAAO;IAAPA,OAAO,6BAAGjF,QAAQ,CAACkF,iBAAiB;EAEpC,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIV,IAAI,KAAKW,SAAS,IAAI,CAAChB,kCAAkC,EAAE;MAC7DA,kCAAkC,GAAG,IAAI;MACzC,CAAC,CAAC,EAAEvE,QAAQ,CAACf,OAAO,EAAE,yFAAyF,CAAC;IAClH;EACF;EAEA,IAAMuG,OAAO,GAAGN,OAAO;EACvB,IAAMO,mBAAmB,GAAG,CAAC,CAAC,EAAE9F,gBAAgB,CAAC+F,sBAAsB,EAAEjB,eAAe,CAAC;EACzF,IAAMkB,sBAAsB,GAAG,CAAC,CAAC,EAAEjG,mBAAmB,CAACkG,yBAAyB,EAAElB,kBAAkB,CAAC;EACrG,IAAMmB,cAAc,GAAG,CAAC,CAAC,EAAEjG,WAAW,CAACkG,iBAAiB,EAAEnB,UAAU,CAAC;EACrE,IAAM1B,wBAAwB,GAAG8C,OAAO,CAACtB,eAAe,CAAC;EAEzD,IAAMuB,eAAe,GAAG,SAAlBA,eAAe,CAAGC,gBAAgB,EAAI;IAC1C,IAAIb,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE9F,QAAQ,CAAC0G,kBAAkB,EAAED,gBAAgB,CAAC,EAAE;MAChG,MAAM,IAAIE,KAAK,sFAAoFtE,kBAAkB,CAACoE,gBAAgB,CAAC,CAAG;IAC5I;IAEA,IAAMG,oBAAoB,GAAGH,gBAAgB,CAACI,WAAW,IAAIJ,gBAAgB,CAACK,IAAI,IAAI,WAAW;IACjG,IAAMD,WAAW,gBAAcD,oBAAoB,MAAG;IACtD,IAAMG,sBAAsB,GAAG;MAC7BtD,wBAAwB,EAAxBA,wBAAwB;MACxBoD,WAAW,EAAXA,WAAW;MACXD,oBAAoB,EAApBA,oBAAoB;MACpBH,gBAAgB,EAAhBA,gBAAgB;MAEhBR,mBAAmB,EAAnBA,mBAAmB;MAEnBE,sBAAsB,EAAtBA,sBAAsB;MACtBE,cAAc,EAAdA,cAAc;MACdhB,cAAc,EAAdA,cAAc;MACdE,kBAAkB,EAAlBA,kBAAkB;MAClBD,gBAAgB,EAAhBA,gBAAgB;MAChBE,mBAAmB,EAAnBA;IACF,CAAC;IAED,SAASwB,eAAe,CAACC,KAAK,EAAE;MAC9B,YAA6D,CAAC,CAAC,EAAEnH,MAAM,CAACoH,OAAO,EAAE,YAAM;UAI/E,IACJC,sBAAsB,GACpBF,KAAK,CADPE,sBAAsB;YAElB/D,YAAY,GAAG,CAAC,CAAC,EAAExD,8BAA8B,CAACH,OAAO,EAAEwH,KAAK,EAAEtG,SAAS,CAAC;UAClF,OAAO,CAACsG,KAAK,CAACvB,OAAO,EAAEyB,sBAAsB,EAAE/D,YAAY,CAAC;QAC9D,CAAC,EAAE,CAAC6D,KAAK,CAAC,CAAC;QAAA;QATJG,YAAY;QAAED,sBAAsB;QAAE/D,YAAY;MAUzD,IAAMiE,YAAY,GAAG,CAAC,CAAC,EAAEvH,MAAM,CAACoH,OAAO,EAAE,YAAM;QAG7C,OAAOE,YAAY,IAAIA,YAAY,CAACE,QAAQ,IAC5C,CAAC,CAAC,EAAEtH,QAAQ,CAACuH,iBAAiB,EAAgBzH,MAAM,CAACL,OAAO,CAAC+H,aAAa,CAACJ,YAAY,CAACE,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAGF,YAAY,GAAGpB,OAAO;MACnI,CAAC,EAAE,CAACoB,YAAY,EAAEpB,OAAO,CAAC,CAAC;MAE3B,IAAMyB,YAAY,GAAG,CAAC,CAAC,EAAE3H,MAAM,CAAC4H,UAAU,EAAEL,YAAY,CAAC;MAIzD,IAAMM,qBAAqB,GAAGpB,OAAO,CAACU,KAAK,CAACvD,KAAK,CAAC,IAAI6C,OAAO,CAACU,KAAK,CAACvD,KAAK,CAACS,QAAQ,CAAC,IAAIoC,OAAO,CAACU,KAAK,CAACvD,KAAK,CAACkE,QAAQ,CAAC;MACpH,IAAMC,uBAAuB,GAAGtB,OAAO,CAACkB,YAAY,CAAC,IAAIlB,OAAO,CAACkB,YAAY,CAAC/D,KAAK,CAAC;MAEpF,IAAIkC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAAC6B,qBAAqB,IAAI,CAACE,uBAAuB,EAAE;QAC/F,MAAM,IAAIlB,KAAK,CAAC,wDAAkDE,WAAW,0DAAqD,iFAAiF,mCAAgCA,WAAW,0BAAsB,CAAC;MACvR;MAGA,IAAMnD,KAAK,GAAGiE,qBAAqB,GAAGV,KAAK,CAACvD,KAAK,GAAG+D,YAAY,CAAC/D,KAAK;MACtE,IAAMoE,cAAc,GAAGD,uBAAuB,GAAGJ,YAAY,CAACK,cAAc,GAAGpE,KAAK,CAACS,QAAQ;MAC7F,IAAMP,kBAAkB,GAAG,CAAC,CAAC,EAAE9D,MAAM,CAACoH,OAAO,EAAE,YAAM;QAGnD,OAAO,CAAC,CAAC,EAAEjH,gBAAgB,CAACR,OAAO,EAAEiE,KAAK,CAACkE,QAAQ,EAAEb,sBAAsB,CAAC;MAC9E,CAAC,EAAE,CAACrD,KAAK,CAAC,CAAC;MACX,YAAyC,CAAC,CAAC,EAAE5D,MAAM,CAACoH,OAAO,EAAE,YAAM;UACjE,IAAI,CAACzD,wBAAwB,EAAE,OAAOrB,qBAAqB;UAG3D,IAAMuB,YAAY,GAAG,CAAC,CAAC,EAAEtD,aAAa,CAAC0H,kBAAkB,EAAErE,KAAK,EAAEiE,qBAAqB,GAAG5B,SAAS,GAAG0B,YAAY,CAAC9D,YAAY,CAAC;UAKhI,IAAML,gBAAgB,GAAGK,YAAY,CAACL,gBAAgB,CAAC0E,IAAI,CAACrE,YAAY,CAAC;UACzE,OAAO,CAACA,YAAY,EAAEL,gBAAgB,CAAC;QACzC,CAAC,EAAE,CAACI,KAAK,EAAEiE,qBAAqB,EAAEF,YAAY,CAAC,CAAC;QAAA;QAXzC9D,YAAY;QAAEL,gBAAgB;MAcrC,IAAM2E,sBAAsB,GAAG,CAAC,CAAC,EAAEnI,MAAM,CAACoH,OAAO,EAAE,YAAM;QACvD,IAAIS,qBAAqB,EAAE;UAIzB,OAAOF,YAAY;QACrB;QAIA,OAAO,CAAC,CAAC,EAAE9H,SAAS,CAACF,OAAO,EAAE,CAAC,CAAC,EAAEgI,YAAY,EAAE;UAC9C9D,YAAY,EAAZA;QACF,CAAC,CAAC;MACJ,CAAC,EAAE,CAACgE,qBAAqB,EAAEF,YAAY,EAAE9D,YAAY,CAAC,CAAC;MAEvD,IAAMT,cAAc,GAAG,CAAC,CAAC,EAAEpD,MAAM,CAACoI,MAAM,GAAG;MAC3C,IAAMjF,gBAAgB,GAAG,CAAC,CAAC,EAAEnD,MAAM,CAACoI,MAAM,EAAE9E,YAAY,CAAC;MACzD,IAAMC,yBAAyB,GAAG,CAAC,CAAC,EAAEvD,MAAM,CAACoI,MAAM,GAAG;MACtD,IAAM/E,iBAAiB,GAAG,CAAC,CAAC,EAAErD,MAAM,CAACoI,MAAM,EAAE,KAAK,CAAC;MACnD,IAAMC,oBAAoB,GAAG,CAAC,CAAC,EAAErI,MAAM,CAACoI,MAAM,EAAE,KAAK,CAAC;MACtD,IAAMrE,SAAS,GAAG,CAAC,CAAC,EAAE/D,MAAM,CAACoI,MAAM,EAAE,KAAK,CAAC;MAC3C,IAAME,+BAA+B,GAAG,CAAC,CAAC,EAAEtI,MAAM,CAACoI,MAAM,GAAG;MAC5D,CAAC,CAAC,EAAE5H,0BAA0B,CAACyC,yBAAyB,EAAE,YAAM;QAC9Dc,SAAS,CAACN,OAAO,GAAG,IAAI;QACxB,OAAO,YAAM;UACXM,SAAS,CAACN,OAAO,GAAG,KAAK;QAC3B,CAAC;MACH,CAAC,EAAE,EAAE,CAAC;MACN,IAAM8E,wBAAwB,GAAG,CAAC,CAAC,EAAEvI,MAAM,CAACoH,OAAO,EAAE,YAAM;QACzD,IAAMoB,QAAQ,GAAG,SAAXA,QAAQ,GAAS;UAOrB,IAAIjF,yBAAyB,CAACE,OAAO,IAAIH,YAAY,KAAKH,gBAAgB,CAACM,OAAO,EAAE;YAClF,OAAOF,yBAAyB,CAACE,OAAO;UAC1C;UAMA,OAAOK,kBAAkB,CAACF,KAAK,CAACS,QAAQ,EAAE,EAAEf,YAAY,CAAC;QAC3D,CAAC;QAED,OAAOkF,QAAQ;MACjB,CAAC,EAAE,CAAC5E,KAAK,EAAEN,YAAY,CAAC,CAAC;MAIzB,IAAMmF,iBAAiB,GAAG,CAAC,CAAC,EAAEzI,MAAM,CAACoH,OAAO,EAAE,YAAM;QAClD,IAAMsB,SAAS,GAAG,SAAZA,SAAS,CAAGC,aAAa,EAAI;UACjC,IAAI,CAAC9E,YAAY,EAAE;YACjB,OAAO,YAAM,CAAC,CAAC;UACjB;UAEA,OAAOH,gBAAgB,CAACC,wBAAwB,EAAEC,KAAK,EAAEC,YAAY,EACrEC,kBAAkB,EAAEX,gBAAgB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEU,SAAS,EAAER,yBAAyB,EAAEC,gBAAgB,EAAEmF,aAAa,CAAC;QACjJ,CAAC;QAED,OAAOD,SAAS;MAClB,CAAC,EAAE,CAAC7E,YAAY,CAAC,CAAC;MAClBhB,iCAAiC,CAACK,mBAAmB,EAAE,CAACC,gBAAgB,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,YAAY,EAAEC,yBAAyB,EAAEC,gBAAgB,CAAC,CAAC;MACxK,IAAIoF,gBAAgB;MAEpB,IAAI;QACFA,gBAAgB,GAAG1G,oBAAoB,CACvCuG,iBAAiB,EAEjBF,wBAAwB,EAAEP,cAAc,GAAG;UAAA,OAAMlE,kBAAkB,CAACkE,cAAc,EAAE,EAAE1E,YAAY,CAAC;QAAA,IAAGiF,wBAAwB,CAAC;MACjI,CAAC,CAAC,OAAO5F,GAAG,EAAE;QACZ,IAAI2F,+BAA+B,CAAC7E,OAAO,EAAE;UAC3C;UACAd,GAAG,CAACkG,OAAO,kEAAgEP,+BAA+B,CAAC7E,OAAO,CAACqF,KAAK,SAAM;QAChI;QAEA,MAAMnG,GAAG;MACX;MAEA,CAAC,CAAC,EAAEnC,0BAA0B,CAACyC,yBAAyB,EAAE,YAAM;QAC9DqF,+BAA+B,CAAC7E,OAAO,GAAGwC,SAAS;QACnD1C,yBAAyB,CAACE,OAAO,GAAGwC,SAAS;QAC7C7C,cAAc,CAACK,OAAO,GAAGmF,gBAAgB;MAC3C,CAAC,CAAC;MAGF,IAAMG,wBAAwB,GAAG,CAAC,CAAC,EAAE/I,MAAM,CAACoH,OAAO,EAAE,YAAM;QACzD,OAGEpH,MAAM,CAACL,OAAO,CAAC+H,aAAa,CAACf,gBAAgB,EAAE,CAAC,CAAC,EAAE9G,SAAS,CAACF,OAAO,EAAE,CAAC,CAAC,EAAEiJ,gBAAgB,EAAE;UAC1FI,GAAG,EAAE3B;QACP,CAAC,CAAC,CAAC;MAEP,CAAC,EAAE,CAACA,sBAAsB,EAAEV,gBAAgB,EAAEiC,gBAAgB,CAAC,CAAC;MAGhE,IAAMK,aAAa,GAAG,CAAC,CAAC,EAAEjJ,MAAM,CAACoH,OAAO,EAAE,YAAM;QAC9C,IAAIzD,wBAAwB,EAAE;UAI5B,OAAoB3D,MAAM,CAACL,OAAO,CAAC+H,aAAa,CAACH,YAAY,CAAC2B,QAAQ,EAAE;YACtEC,KAAK,EAAEhB;UACT,CAAC,EAAEY,wBAAwB,CAAC;QAC9B;QAEA,OAAOA,wBAAwB;MACjC,CAAC,EAAE,CAACxB,YAAY,EAAEwB,wBAAwB,EAAEZ,sBAAsB,CAAC,CAAC;MACpE,OAAOc,aAAa;IACtB;IAEA,IAAMG,QAAQ,GAAGpJ,MAAM,CAACL,OAAO,CAAC0J,IAAI,CAACnC,eAAe,CAAC;IAGrD,IAAMoC,OAAO,GAAGF,QAAQ;IACxBE,OAAO,CAAC3C,gBAAgB,GAAGA,gBAAgB;IAC3C2C,OAAO,CAACvC,WAAW,GAAGG,eAAe,CAACH,WAAW,GAAGA,WAAW;IAE/D,IAAIpB,UAAU,EAAE;MACd,IAAM4D,UAAU,GAAGvJ,MAAM,CAACL,OAAO,CAACgG,UAAU,CAAC,SAAS6D,iBAAiB,CAACrC,KAAK,EAAE6B,GAAG,EAAE;QAElF,OAAoBhJ,MAAM,CAACL,OAAO,CAAC+H,aAAa,CAAC4B,OAAO,EAAE,CAAC,CAAC,EAAEzJ,SAAS,CAACF,OAAO,EAAE,CAAC,CAAC,EAAEwH,KAAK,EAAE;UAC1FE,sBAAsB,EAAE2B;QAC1B,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;MAEF,IAAMS,SAAS,GAAGF,UAAU;MAC5BE,SAAS,CAAC1C,WAAW,GAAGA,WAAW;MACnC0C,SAAS,CAAC9C,gBAAgB,GAAGA,gBAAgB;MAC7C,OAAO,CAAC,CAAC,EAAE5G,qBAAqB,CAACJ,OAAO,EAAE8J,SAAS,EAAE9C,gBAAgB,CAAC;IACxE;IAEA,OAAO,CAAC,CAAC,EAAE5G,qBAAqB,CAACJ,OAAO,EAAE2J,OAAO,EAAE3C,gBAAgB,CAAC;EACtE,CAAC;EAED,OAAOD,eAAe;AACxB;AAEA,IAAIgD,QAAQ,GAAGxE,OAAO;AACtBzF,OAAO,CAACE,OAAO,GAAG+J,QAAQ"}