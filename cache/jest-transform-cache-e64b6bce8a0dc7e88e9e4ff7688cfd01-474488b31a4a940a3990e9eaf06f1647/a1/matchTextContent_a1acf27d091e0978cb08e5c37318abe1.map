{"version":3,"mappings":";;;;;;AACA;AACA;AASO,SAASA,gBAAgB,CAC9BC,IAAuB,EACvBC,IAAe,EAEf;EAAA,IADAC,OAAyB,uEAAG,CAAC,CAAC;EAE9B,IAAMC,WAAW,GAAG,kCAAc,EAACH,IAAI,CAAC;EACxC,IAAQI,KAAK,GAAiBF,OAAO,CAA7BE,KAAK;IAAEC,aAAeH,OAAO,CAAtBG;EACf,OAAO,oBAAO,EAACJ,IAAI,EAAEE,WAAW,EAAEE,UAAU,EAAED,KAAK,CAAC;AACtD","names":["matchTextContent","node","text","options","textContent","exact","normalizer"],"sources":["../../../src/helpers/matchers/matchTextContent.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { matches, TextMatch, TextMatchOptions } from '../../matches';\nimport { getTextContent } from '../getTextContent';\n\n/**\n * Matches the given node's text content against string or regex matcher.\n *\n * @param node - Node which text content will be matched\n * @param text - The string or regex to match.\n * @returns - Whether the node's text content matches the given string or regex.\n */\nexport function matchTextContent(\n  node: ReactTestInstance,\n  text: TextMatch,\n  options: TextMatchOptions = {}\n) {\n  const textContent = getTextContent(node);\n  const { exact, normalizer } = options;\n  return matches(text, textContent, normalizer, exact);\n}\n"]}