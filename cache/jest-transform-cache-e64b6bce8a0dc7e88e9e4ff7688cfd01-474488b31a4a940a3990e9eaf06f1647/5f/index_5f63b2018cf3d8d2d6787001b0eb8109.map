{"version":3,"names":["module","exports","codegen","functionParams","functionName","undefined","body","Codegen","formatStringOrScope","source","toString","verbose","console","log","scopeKeys","Object","keys","scopeParams","Array","length","scopeValues","scopeOffset","Function","apply","formatParams","arguments","formatOffset","replace","$0","$1","value","String","Number","Math","floor","JSON","stringify","Error","push","functionNameOverride","join"],"sources":["index.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = codegen;\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @param {string[]} functionParams Function parameter names\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n */\r\nfunction codegen(functionParams, functionName) {\r\n\r\n    /* istanbul ignore if */\r\n    if (typeof functionParams === \"string\") {\r\n        functionName = functionParams;\r\n        functionParams = undefined;\r\n    }\r\n\r\n    var body = [];\r\n\r\n    /**\r\n     * Appends code to the function's body or finishes generation.\r\n     * @typedef Codegen\r\n     * @type {function}\r\n     * @param {string|Object.<string,*>} [formatStringOrScope] Format string or, to finish the function, an object of additional scope variables, if any\r\n     * @param {...*} [formatParams] Format parameters\r\n     * @returns {Codegen|Function} Itself or the generated function if finished\r\n     * @throws {Error} If format parameter counts do not match\r\n     */\r\n\r\n    function Codegen(formatStringOrScope) {\r\n        // note that explicit array handling below makes this ~50% faster\r\n\r\n        // finish the function\r\n        if (typeof formatStringOrScope !== \"string\") {\r\n            var source = toString();\r\n            if (codegen.verbose)\r\n                console.log(\"codegen: \" + source); // eslint-disable-line no-console\r\n            source = \"return \" + source;\r\n            if (formatStringOrScope) {\r\n                var scopeKeys   = Object.keys(formatStringOrScope),\r\n                    scopeParams = new Array(scopeKeys.length + 1),\r\n                    scopeValues = new Array(scopeKeys.length),\r\n                    scopeOffset = 0;\r\n                while (scopeOffset < scopeKeys.length) {\r\n                    scopeParams[scopeOffset] = scopeKeys[scopeOffset];\r\n                    scopeValues[scopeOffset] = formatStringOrScope[scopeKeys[scopeOffset++]];\r\n                }\r\n                scopeParams[scopeOffset] = source;\r\n                return Function.apply(null, scopeParams).apply(null, scopeValues); // eslint-disable-line no-new-func\r\n            }\r\n            return Function(source)(); // eslint-disable-line no-new-func\r\n        }\r\n\r\n        // otherwise append to body\r\n        var formatParams = new Array(arguments.length - 1),\r\n            formatOffset = 0;\r\n        while (formatOffset < formatParams.length)\r\n            formatParams[formatOffset] = arguments[++formatOffset];\r\n        formatOffset = 0;\r\n        formatStringOrScope = formatStringOrScope.replace(/%([%dfijs])/g, function replace($0, $1) {\r\n            var value = formatParams[formatOffset++];\r\n            switch ($1) {\r\n                case \"d\": case \"f\": return String(Number(value));\r\n                case \"i\": return String(Math.floor(value));\r\n                case \"j\": return JSON.stringify(value);\r\n                case \"s\": return String(value);\r\n            }\r\n            return \"%\";\r\n        });\r\n        if (formatOffset !== formatParams.length)\r\n            throw Error(\"parameter count mismatch\");\r\n        body.push(formatStringOrScope);\r\n        return Codegen;\r\n    }\r\n\r\n    function toString(functionNameOverride) {\r\n        return \"function \" + (functionNameOverride || functionName || \"\") + \"(\" + (functionParams && functionParams.join(\",\") || \"\") + \"){\\n  \" + body.join(\"\\n  \") + \"\\n}\";\r\n    }\r\n\r\n    Codegen.toString = toString;\r\n    return Codegen;\r\n}\r\n\r\n/**\r\n * Begins generating a function.\r\n * @memberof util\r\n * @function codegen\r\n * @param {string} [functionName] Function name if not anonymous\r\n * @returns {Codegen} Appender that appends code to the function's body\r\n * @variation 2\r\n */\r\n\r\n/**\r\n * When set to `true`, codegen will log generated code to console. Useful for debugging.\r\n * @name util.codegen.verbose\r\n * @type {boolean}\r\n */\r\ncodegen.verbose = false;\r\n"],"mappings":"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"}