40d79f216b724103ca67e2af3deb8f93
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toHaveProp = void 0;
var jest_matcher_utils_1 = require("jest-matcher-utils");
var utils_1 = require("./utils");
function printAttribute(name, value) {
  return value === undefined ? name : name + "=" + (0, jest_matcher_utils_1.stringify)(value);
}
function getPropComment(name, value) {
  return value === undefined ? "element.hasProp(" + name + ")" : "element.getAttribute(" + name + ") === " + (0, jest_matcher_utils_1.stringify)(value);
}
function toHaveProp(element, name, expectedValue) {
  var _this = this;
  (0, utils_1.checkReactElement)(element, toHaveProp, this);
  var prop = element.props[name];
  var isDefined = expectedValue !== undefined;
  var hasProp = (name in element.props);
  return {
    pass: isDefined ? hasProp && this.equals(prop, expectedValue) : hasProp,
    message: function message() {
      var to = _this.isNot ? 'not to' : 'to';
      var receivedProp = hasProp ? printAttribute(name, prop) : null;
      var matcher = (0, jest_matcher_utils_1.matcherHint)((_this.isNot ? '.not' : '') + ".toHaveProp", 'element', (0, jest_matcher_utils_1.printExpected)(name), {
        secondArgument: isDefined ? (0, jest_matcher_utils_1.printExpected)(expectedValue) : undefined,
        comment: getPropComment(name, expectedValue)
      });
      return (0, utils_1.getMessage)(matcher, "Expected the element " + to + " have prop", printAttribute(name, expectedValue), 'Received', receivedProp);
    }
  };
}
exports.toHaveProp = toHaveProp;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRvSGF2ZVByb3AiLCJqZXN0X21hdGNoZXJfdXRpbHNfMSIsInJlcXVpcmUiLCJ1dGlsc18xIiwicHJpbnRBdHRyaWJ1dGUiLCJuYW1lIiwidW5kZWZpbmVkIiwic3RyaW5naWZ5IiwiZ2V0UHJvcENvbW1lbnQiLCJlbGVtZW50IiwiZXhwZWN0ZWRWYWx1ZSIsImNoZWNrUmVhY3RFbGVtZW50IiwicHJvcCIsInByb3BzIiwiaXNEZWZpbmVkIiwiaGFzUHJvcCIsInBhc3MiLCJlcXVhbHMiLCJtZXNzYWdlIiwidG8iLCJpc05vdCIsInJlY2VpdmVkUHJvcCIsIm1hdGNoZXIiLCJtYXRjaGVySGludCIsInByaW50RXhwZWN0ZWQiLCJzZWNvbmRBcmd1bWVudCIsImNvbW1lbnQiLCJnZXRNZXNzYWdlIl0sInNvdXJjZXMiOlsidG8taGF2ZS1wcm9wLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b0hhdmVQcm9wID0gdm9pZCAwO1xuY29uc3QgamVzdF9tYXRjaGVyX3V0aWxzXzEgPSByZXF1aXJlKFwiamVzdC1tYXRjaGVyLXV0aWxzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuZnVuY3Rpb24gcHJpbnRBdHRyaWJ1dGUobmFtZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IG5hbWUgOiBgJHtuYW1lfT0keygwLCBqZXN0X21hdGNoZXJfdXRpbHNfMS5zdHJpbmdpZnkpKHZhbHVlKX1gO1xufVxuZnVuY3Rpb24gZ2V0UHJvcENvbW1lbnQobmFtZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZFxuICAgICAgICA/IGBlbGVtZW50Lmhhc1Byb3AoJHtuYW1lfSlgXG4gICAgICAgIDogYGVsZW1lbnQuZ2V0QXR0cmlidXRlKCR7bmFtZX0pID09PSAkeygwLCBqZXN0X21hdGNoZXJfdXRpbHNfMS5zdHJpbmdpZnkpKHZhbHVlKX1gO1xufVxuZnVuY3Rpb24gdG9IYXZlUHJvcChlbGVtZW50LCBuYW1lLCBleHBlY3RlZFZhbHVlKSB7XG4gICAgKDAsIHV0aWxzXzEuY2hlY2tSZWFjdEVsZW1lbnQpKGVsZW1lbnQsIHRvSGF2ZVByb3AsIHRoaXMpO1xuICAgIGNvbnN0IHByb3AgPSBlbGVtZW50LnByb3BzW25hbWVdO1xuICAgIGNvbnN0IGlzRGVmaW5lZCA9IGV4cGVjdGVkVmFsdWUgIT09IHVuZGVmaW5lZDtcbiAgICBjb25zdCBoYXNQcm9wID0gbmFtZSBpbiBlbGVtZW50LnByb3BzO1xuICAgIHJldHVybiB7XG4gICAgICAgIHBhc3M6IGlzRGVmaW5lZCA/IGhhc1Byb3AgJiYgdGhpcy5lcXVhbHMocHJvcCwgZXhwZWN0ZWRWYWx1ZSkgOiBoYXNQcm9wLFxuICAgICAgICBtZXNzYWdlOiAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0byA9IHRoaXMuaXNOb3QgPyAnbm90IHRvJyA6ICd0byc7XG4gICAgICAgICAgICBjb25zdCByZWNlaXZlZFByb3AgPSBoYXNQcm9wID8gcHJpbnRBdHRyaWJ1dGUobmFtZSwgcHJvcCkgOiBudWxsO1xuICAgICAgICAgICAgY29uc3QgbWF0Y2hlciA9ICgwLCBqZXN0X21hdGNoZXJfdXRpbHNfMS5tYXRjaGVySGludCkoYCR7dGhpcy5pc05vdCA/ICcubm90JyA6ICcnfS50b0hhdmVQcm9wYCwgJ2VsZW1lbnQnLCAoMCwgamVzdF9tYXRjaGVyX3V0aWxzXzEucHJpbnRFeHBlY3RlZCkobmFtZSksIHtcbiAgICAgICAgICAgICAgICBzZWNvbmRBcmd1bWVudDogaXNEZWZpbmVkID8gKDAsIGplc3RfbWF0Y2hlcl91dGlsc18xLnByaW50RXhwZWN0ZWQpKGV4cGVjdGVkVmFsdWUpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIGNvbW1lbnQ6IGdldFByb3BDb21tZW50KG5hbWUsIGV4cGVjdGVkVmFsdWUpLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuZ2V0TWVzc2FnZSkobWF0Y2hlciwgYEV4cGVjdGVkIHRoZSBlbGVtZW50ICR7dG99IGhhdmUgcHJvcGAsIHByaW50QXR0cmlidXRlKG5hbWUsIGV4cGVjdGVkVmFsdWUpLCAnUmVjZWl2ZWQnLCByZWNlaXZlZFByb3ApO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnRvSGF2ZVByb3AgPSB0b0hhdmVQcm9wO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaQSxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFFLFlBQVksRUFBRTtFQUFFQyxLQUFLLEVBQUU7QUFBSyxDQUFDLENBQUM7QUFDN0RELE9BQU8sQ0FBQ0UsVUFBVSxHQUFHLEtBQUssQ0FBQztBQUMzQixJQUFNQyxvQkFBb0IsR0FBR0MsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0FBQzFELElBQU1DLE9BQU8sR0FBR0QsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxTQUFTRSxjQUFjLENBQUNDLElBQUksRUFBRU4sS0FBSyxFQUFFO0VBQ2pDLE9BQU9BLEtBQUssS0FBS08sU0FBUyxHQUFHRCxJQUFJLEdBQU1BLElBQUksU0FBSSxDQUFDLENBQUMsRUFBRUosb0JBQW9CLENBQUNNLFNBQVMsRUFBRVIsS0FBSyxDQUFHO0FBQy9GO0FBQ0EsU0FBU1MsY0FBYyxDQUFDSCxJQUFJLEVBQUVOLEtBQUssRUFBRTtFQUNqQyxPQUFPQSxLQUFLLEtBQUtPLFNBQVMsd0JBQ0RELElBQUksbUNBQ0NBLElBQUksY0FBUyxDQUFDLENBQUMsRUFBRUosb0JBQW9CLENBQUNNLFNBQVMsRUFBRVIsS0FBSyxDQUFHO0FBQzNGO0FBQ0EsU0FBU0MsVUFBVSxDQUFDUyxPQUFPLEVBQUVKLElBQUksRUFBRUssYUFBYSxFQUFFO0VBQUE7RUFDOUMsQ0FBQyxDQUFDLEVBQUVQLE9BQU8sQ0FBQ1EsaUJBQWlCLEVBQUVGLE9BQU8sRUFBRVQsVUFBVSxFQUFFLElBQUksQ0FBQztFQUN6RCxJQUFNWSxJQUFJLEdBQUdILE9BQU8sQ0FBQ0ksS0FBSyxDQUFDUixJQUFJLENBQUM7RUFDaEMsSUFBTVMsU0FBUyxHQUFHSixhQUFhLEtBQUtKLFNBQVM7RUFDN0MsSUFBTVMsT0FBTyxJQUFHVixJQUFJLElBQUlJLE9BQU8sQ0FBQ0ksS0FBSztFQUNyQyxPQUFPO0lBQ0hHLElBQUksRUFBRUYsU0FBUyxHQUFHQyxPQUFPLElBQUksSUFBSSxDQUFDRSxNQUFNLENBQUNMLElBQUksRUFBRUYsYUFBYSxDQUFDLEdBQUdLLE9BQU87SUFDdkVHLE9BQU8sRUFBRSxtQkFBTTtNQUNYLElBQU1DLEVBQUUsR0FBRyxLQUFJLENBQUNDLEtBQUssR0FBRyxRQUFRLEdBQUcsSUFBSTtNQUN2QyxJQUFNQyxZQUFZLEdBQUdOLE9BQU8sR0FBR1gsY0FBYyxDQUFDQyxJQUFJLEVBQUVPLElBQUksQ0FBQyxHQUFHLElBQUk7TUFDaEUsSUFBTVUsT0FBTyxHQUFHLENBQUMsQ0FBQyxFQUFFckIsb0JBQW9CLENBQUNzQixXQUFXLEdBQUssS0FBSSxDQUFDSCxLQUFLLEdBQUcsTUFBTSxHQUFHLEVBQUUsbUJBQWUsU0FBUyxFQUFFLENBQUMsQ0FBQyxFQUFFbkIsb0JBQW9CLENBQUN1QixhQUFhLEVBQUVuQixJQUFJLENBQUMsRUFBRTtRQUN0Sm9CLGNBQWMsRUFBRVgsU0FBUyxHQUFHLENBQUMsQ0FBQyxFQUFFYixvQkFBb0IsQ0FBQ3VCLGFBQWEsRUFBRWQsYUFBYSxDQUFDLEdBQUdKLFNBQVM7UUFDOUZvQixPQUFPLEVBQUVsQixjQUFjLENBQUNILElBQUksRUFBRUssYUFBYTtNQUMvQyxDQUFDLENBQUM7TUFDRixPQUFPLENBQUMsQ0FBQyxFQUFFUCxPQUFPLENBQUN3QixVQUFVLEVBQUVMLE9BQU8sNEJBQTBCSCxFQUFFLGlCQUFjZixjQUFjLENBQUNDLElBQUksRUFBRUssYUFBYSxDQUFDLEVBQUUsVUFBVSxFQUFFVyxZQUFZLENBQUM7SUFDbEo7RUFDSixDQUFDO0FBQ0w7QUFDQXZCLE9BQU8sQ0FBQ0UsVUFBVSxHQUFHQSxVQUFVIn0=