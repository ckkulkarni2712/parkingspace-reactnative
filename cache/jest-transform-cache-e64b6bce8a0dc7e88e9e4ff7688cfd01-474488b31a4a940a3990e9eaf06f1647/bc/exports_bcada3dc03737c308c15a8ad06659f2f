f27a55b29d97cd6849c3d6e00e92cbc3
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
var _exportNames = {
  Provider: true,
  connect: true,
  ReactReduxContext: true,
  useDispatch: true,
  createDispatchHook: true,
  useSelector: true,
  createSelectorHook: true,
  useStore: true,
  createStoreHook: true,
  shallowEqual: true
};
Object.defineProperty(exports, "Provider", {
  enumerable: true,
  get: function get() {
    return _Provider.default;
  }
});
Object.defineProperty(exports, "connect", {
  enumerable: true,
  get: function get() {
    return _connect.default;
  }
});
Object.defineProperty(exports, "ReactReduxContext", {
  enumerable: true,
  get: function get() {
    return _Context.ReactReduxContext;
  }
});
Object.defineProperty(exports, "useDispatch", {
  enumerable: true,
  get: function get() {
    return _useDispatch.useDispatch;
  }
});
Object.defineProperty(exports, "createDispatchHook", {
  enumerable: true,
  get: function get() {
    return _useDispatch.createDispatchHook;
  }
});
Object.defineProperty(exports, "useSelector", {
  enumerable: true,
  get: function get() {
    return _useSelector.useSelector;
  }
});
Object.defineProperty(exports, "createSelectorHook", {
  enumerable: true,
  get: function get() {
    return _useSelector.createSelectorHook;
  }
});
Object.defineProperty(exports, "useStore", {
  enumerable: true,
  get: function get() {
    return _useStore.useStore;
  }
});
Object.defineProperty(exports, "createStoreHook", {
  enumerable: true,
  get: function get() {
    return _useStore.createStoreHook;
  }
});
Object.defineProperty(exports, "shallowEqual", {
  enumerable: true,
  get: function get() {
    return _shallowEqual.default;
  }
});
var _Provider = _interopRequireDefault(require("./components/Provider"));
var _connect = _interopRequireDefault(require("./components/connect"));
var _Context = require("./components/Context");
var _useDispatch = require("./hooks/useDispatch");
var _useSelector = require("./hooks/useSelector");
var _useStore = require("./hooks/useStore");
var _shallowEqual = _interopRequireDefault(require("./utils/shallowEqual"));
var _types = require("./types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiX2V4cG9ydE5hbWVzIiwiUHJvdmlkZXIiLCJjb25uZWN0IiwiUmVhY3RSZWR1eENvbnRleHQiLCJ1c2VEaXNwYXRjaCIsImNyZWF0ZURpc3BhdGNoSG9vayIsInVzZVNlbGVjdG9yIiwiY3JlYXRlU2VsZWN0b3JIb29rIiwidXNlU3RvcmUiLCJjcmVhdGVTdG9yZUhvb2siLCJzaGFsbG93RXF1YWwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJfUHJvdmlkZXIiLCJkZWZhdWx0IiwiX2Nvbm5lY3QiLCJfQ29udGV4dCIsIl91c2VEaXNwYXRjaCIsIl91c2VTZWxlY3RvciIsIl91c2VTdG9yZSIsIl9zaGFsbG93RXF1YWwiLCJfdHlwZXMiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCJdLCJzb3VyY2VzIjpbImV4cG9ydHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0ID0gcmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIF9leHBvcnROYW1lcyA9IHtcbiAgUHJvdmlkZXI6IHRydWUsXG4gIGNvbm5lY3Q6IHRydWUsXG4gIFJlYWN0UmVkdXhDb250ZXh0OiB0cnVlLFxuICB1c2VEaXNwYXRjaDogdHJ1ZSxcbiAgY3JlYXRlRGlzcGF0Y2hIb29rOiB0cnVlLFxuICB1c2VTZWxlY3RvcjogdHJ1ZSxcbiAgY3JlYXRlU2VsZWN0b3JIb29rOiB0cnVlLFxuICB1c2VTdG9yZTogdHJ1ZSxcbiAgY3JlYXRlU3RvcmVIb29rOiB0cnVlLFxuICBzaGFsbG93RXF1YWw6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm92aWRlclwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfUHJvdmlkZXIuZGVmYXVsdDtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb25uZWN0XCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9jb25uZWN0LmRlZmF1bHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVhY3RSZWR1eENvbnRleHRcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX0NvbnRleHQuUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidXNlRGlzcGF0Y2hcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3VzZURpc3BhdGNoLnVzZURpc3BhdGNoO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZURpc3BhdGNoSG9va1wiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdXNlRGlzcGF0Y2guY3JlYXRlRGlzcGF0Y2hIb29rO1xuICB9XG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInVzZVNlbGVjdG9yXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF91c2VTZWxlY3Rvci51c2VTZWxlY3RvcjtcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVTZWxlY3Rvckhvb2tcIiwge1xuICBlbnVtZXJhYmxlOiB0cnVlLFxuICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX3VzZVNlbGVjdG9yLmNyZWF0ZVNlbGVjdG9ySG9vaztcbiAgfVxufSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ1c2VTdG9yZVwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfdXNlU3RvcmUudXNlU3RvcmU7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlU3RvcmVIb29rXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF91c2VTdG9yZS5jcmVhdGVTdG9yZUhvb2s7XG4gIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2hhbGxvd0VxdWFsXCIsIHtcbiAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIF9zaGFsbG93RXF1YWwuZGVmYXVsdDtcbiAgfVxufSk7XG5cbnZhciBfUHJvdmlkZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvUHJvdmlkZXJcIikpO1xuXG52YXIgX2Nvbm5lY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvY29ubmVjdFwiKSk7XG5cbnZhciBfQ29udGV4dCA9IHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvQ29udGV4dFwiKTtcblxudmFyIF91c2VEaXNwYXRjaCA9IHJlcXVpcmUoXCIuL2hvb2tzL3VzZURpc3BhdGNoXCIpO1xuXG52YXIgX3VzZVNlbGVjdG9yID0gcmVxdWlyZShcIi4vaG9va3MvdXNlU2VsZWN0b3JcIik7XG5cbnZhciBfdXNlU3RvcmUgPSByZXF1aXJlKFwiLi9ob29rcy91c2VTdG9yZVwiKTtcblxudmFyIF9zaGFsbG93RXF1YWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWxzL3NoYWxsb3dFcXVhbFwiKSk7XG5cbnZhciBfdHlwZXMgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcblxuT2JqZWN0LmtleXMoX3R5cGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfdHlwZXNba2V5XSkgcmV0dXJuO1xuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBfdHlwZXNba2V5XTtcbiAgICB9XG4gIH0pO1xufSk7Il0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUVaLElBQUlBLHNCQUFzQixHQUFHQyxPQUFPLENBQUMsOENBQThDLENBQUM7QUFFcEZDLE9BQU8sQ0FBQ0MsVUFBVSxHQUFHLElBQUk7QUFDekIsSUFBSUMsWUFBWSxHQUFHO0VBQ2pCQyxRQUFRLEVBQUUsSUFBSTtFQUNkQyxPQUFPLEVBQUUsSUFBSTtFQUNiQyxpQkFBaUIsRUFBRSxJQUFJO0VBQ3ZCQyxXQUFXLEVBQUUsSUFBSTtFQUNqQkMsa0JBQWtCLEVBQUUsSUFBSTtFQUN4QkMsV0FBVyxFQUFFLElBQUk7RUFDakJDLGtCQUFrQixFQUFFLElBQUk7RUFDeEJDLFFBQVEsRUFBRSxJQUFJO0VBQ2RDLGVBQWUsRUFBRSxJQUFJO0VBQ3JCQyxZQUFZLEVBQUU7QUFDaEIsQ0FBQztBQUNEQyxNQUFNLENBQUNDLGNBQWMsQ0FBQ2QsT0FBTyxFQUFFLFVB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