9e4b09334fb5c4aafa3c33c48189f7a2
"use strict";

exports.__esModule = true;
var _exportNames = {
  batch: true
};
Object.defineProperty(exports, "batch", {
  enumerable: true,
  get: function get() {
    return _reactBatchedUpdates.unstable_batchedUpdates;
  }
});
var _shim = require("use-sync-external-store/shim");
var _withSelector = require("use-sync-external-store/shim/with-selector");
var _reactBatchedUpdates = require("./utils/reactBatchedUpdates");
var _batch = require("./utils/batch");
var _useSelector = require("./hooks/useSelector");
var _connect = require("./components/connect");
var _exports = require("./exports");
Object.keys(_exports).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _exports[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _exports[key];
    }
  });
});
(0, _useSelector.initializeUseSelector)(_withSelector.useSyncExternalStoreWithSelector);
(0, _connect.initializeConnect)(_shim.useSyncExternalStore);
(0, _batch.setBatch)(_reactBatchedUpdates.unstable_batchedUpdates);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsIl9leHBvcnROYW1lcyIsImJhdGNoIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX3JlYWN0QmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyIsIl9zaGltIiwicmVxdWlyZSIsIl93aXRoU2VsZWN0b3IiLCJfYmF0Y2giLCJfdXNlU2VsZWN0b3IiLCJfY29ubmVjdCIsIl9leHBvcnRzIiwia2V5cyIsImZvckVhY2giLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJpbml0aWFsaXplVXNlU2VsZWN0b3IiLCJ1c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3RvciIsImluaXRpYWxpemVDb25uZWN0IiwidXNlU3luY0V4dGVybmFsU3RvcmUiLCJzZXRCYXRjaCJdLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xudmFyIF9leHBvcnROYW1lcyA9IHtcbiAgYmF0Y2g6IHRydWVcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJiYXRjaFwiLCB7XG4gIGVudW1lcmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBfcmVhY3RCYXRjaGVkVXBkYXRlcy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcztcbiAgfVxufSk7XG5cbnZhciBfc2hpbSA9IHJlcXVpcmUoXCJ1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltXCIpO1xuXG52YXIgX3dpdGhTZWxlY3RvciA9IHJlcXVpcmUoXCJ1c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL3dpdGgtc2VsZWN0b3JcIik7XG5cbnZhciBfcmVhY3RCYXRjaGVkVXBkYXRlcyA9IHJlcXVpcmUoXCIuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXNcIik7XG5cbnZhciBfYmF0Y2ggPSByZXF1aXJlKFwiLi91dGlscy9iYXRjaFwiKTtcblxudmFyIF91c2VTZWxlY3RvciA9IHJlcXVpcmUoXCIuL2hvb2tzL3VzZVNlbGVjdG9yXCIpO1xuXG52YXIgX2Nvbm5lY3QgPSByZXF1aXJlKFwiLi9jb21wb25lbnRzL2Nvbm5lY3RcIik7XG5cbnZhciBfZXhwb3J0cyA9IHJlcXVpcmUoXCIuL2V4cG9ydHNcIik7XG5cbk9iamVjdC5rZXlzKF9leHBvcnRzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgaWYgKGtleSA9PT0gXCJkZWZhdWx0XCIgfHwga2V5ID09PSBcIl9fZXNNb2R1bGVcIikgcmV0dXJuO1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKF9leHBvcnROYW1lcywga2V5KSkgcmV0dXJuO1xuICBpZiAoa2V5IGluIGV4cG9ydHMgJiYgZXhwb3J0c1trZXldID09PSBfZXhwb3J0c1trZXldKSByZXR1cm47XG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIF9leHBvcnRzW2tleV07XG4gICAgfVxuICB9KTtcbn0pO1xuLy8gVGhlIHByaW1hcnkgZW50cnkgcG9pbnQgYXNzdW1lcyB3ZSdyZSB3b3JraW5nIHdpdGggc3RhbmRhcmQgUmVhY3RET00vUk4sIGJ1dFxuLy8gb2xkZXIgdmVyc2lvbnMgdGhhdCBkbyBub3QgaW5jbHVkZSBgdXNlU3luY0V4dGVybmFsU3RvcmVgIChSZWFjdCAxNi45IC0gMTcueCkuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoZSB1c2VTeW5jRXh0ZXJuYWxTdG9yZSBjb21wYXQgc2hpbSBpcyBuZWVkZWQuXG4oMCwgX3VzZVNlbGVjdG9yLmluaXRpYWxpemVVc2VTZWxlY3RvcikoX3dpdGhTZWxlY3Rvci51c2VTeW5jRXh0ZXJuYWxTdG9yZVdpdGhTZWxlY3Rvcik7XG4oMCwgX2Nvbm5lY3QuaW5pdGlhbGl6ZUNvbm5lY3QpKF9zaGltLnVzZVN5bmNFeHRlcm5hbFN0b3JlKTsgLy8gRW5hYmxlIGJhdGNoZWQgdXBkYXRlcyBpbiBvdXIgc3Vic2NyaXB0aW9ucyBmb3IgdXNlXG4vLyB3aXRoIHN0YW5kYXJkIFJlYWN0IHJlbmRlcmVycyAoUmVhY3RET00sIFJlYWN0IE5hdGl2ZSlcblxuKDAsIF9iYXRjaC5zZXRCYXRjaCkoX3JlYWN0QmF0Y2hlZFVwZGF0ZXMudW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMpOyJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsT0FBTyxDQUFDQyxVQUFVLEdBQUcsSUFBSTtBQUN6QixJQUFJQyxZQUFZLEdBQUc7RUFDakJDLEtBQUssRUFBRTtBQUNULENBQUM7QUFDREMsTUFBTSxDQUFDQyxjQUFjLENBQUNMLE9BQU8sRUFBRSxPQUFPLEVBQUU7RUFDdENNLFVBQVUsRUFBRSxJQUFJO0VBQ2hCQyxHQUFHLEVBQUUsZUFBWTtJQUNmLE9BQU9DLG9CQUFvQixDQUFDQyx1QkFBdUI7RUFDckQ7QUFDRixDQUFDLENBQUM7QUFFRixJQUFJQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQztBQUVuRCxJQUFJQyxhQUFhLEdBQUdELE9BQU8sQ0FBQyw0Q0FBNEMsQ0FBQztBQUV6RSxJQUFJSCxvQkFBb0IsR0FBR0csT0FBTyxDQUFDLDZCQUE2QixDQUFDO0FBRWpFLElBQUlFLE1BQU0sR0FBR0YsT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUVyQyxJQUFJRyxZQUFZLEdBQUdILE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUVqRCxJQUFJSSxRQUFRLEdBQUdKLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQztBQUU5QyxJQUFJSyxRQUFRLEdBQUdMLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFFbkNQLE1BQU0sQ0FBQ2EsSUFBSSxDQUFDRCxRQUFRLENBQUMsQ0FBQ0UsT0FBTyxDQUFDLFVBQVVDLEdBQUcsRUFBRTtFQUMzQyxJQUFJQSxHQUFHLEtBQUssU0FBUyxJQUFJQSxHQUFHLEtBQUssWUFBWSxFQUFFO0VBQy9DLElBQUlmLE1BQU0sQ0FBQ2dCLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNwQixZQUFZLEVBQUVpQixHQUFHLENBQUMsRUFBRTtFQUM3RCxJQUFJQSxHQUFHLElBQUluQixPQUFPLElBQUlBLE9BQU8sQ0FBQ21CLEdBQUcsQ0FBQyxLQUFLSCxRQUFRLENBQUNHLEdBQUcsQ0FBQyxFQUFFO0VBQ3REZixNQUFNLENBQUNDLGNBQWMsQ0FBQ0wsT0FBTyxFQUFFbUIsR0FBRyxFQUFFO0lBQ2xDYixVQUFVLEVBQUUsSUFBSTtJQUNoQkMsR0FBRyxFQUFFLGVBQVk7TUFDZixPQUFPUyxRQUFRLENBQUNHLEdBQUcsQ0FBQztJQUN0QjtFQUNGLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUlGLENBQUMsQ0FBQyxFQUFFTCxZQUFZLENBQUNTLHFCQUFxQixFQUFFWCxhQUFhLENBQUNZLGdDQUFnQyxDQUFDO0FBQ3ZGLENBQUMsQ0FBQyxFQUFFVCxRQUFRLENBQUNVLGlCQUFpQixFQUFFZixLQUFLLENBQUNnQixvQkFBb0IsQ0FBQztBQUczRCxDQUFDLENBQUMsRUFBRWIsTUFBTSxDQUFDYyxRQUFRLEVBQUVuQixvQkFBb0IsQ0FBQ0MsdUJBQXVCLENBQUMifQ==