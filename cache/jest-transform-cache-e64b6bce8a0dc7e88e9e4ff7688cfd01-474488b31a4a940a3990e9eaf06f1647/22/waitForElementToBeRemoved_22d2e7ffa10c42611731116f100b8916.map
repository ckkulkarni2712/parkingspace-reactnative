{"version":3,"mappings":";;;;;;;;AAAA;AAEA;AAAkD;EAAA;IAAAA;EAAA;AAAA;AAElD,SAASC,SAAS,CAAIC,MAAS,EAAW;EACxC,OAAO,CAACA,MAAM,IAAKC,KAAK,CAACC,OAAO,CAACF,MAAM,CAAC,IAAI,CAACA,MAAM,CAACG,MAAO;AAC7D;AAAA,SAE8BC,yBAAyB;EAAA;AAAA;AAAA;EAAA,6DAAxC,WACbC,WAAoB,EACpBC,OAAwB,EACZ;IAEZ,IAAMC,YAAY,GAAG,IAAIC,sBAAc,CACrC,yCAAyC,EACzCJ,yBAAyB,CAC1B;IAGD,IAAMK,eAAe,GAAGJ,WAAW,EAAE;IACrC,IAAIN,SAAS,CAACU,eAAe,CAAC,EAAE;MAC9B,MAAM,IAAID,sBAAc,CACtB,oKAAoK,EACpKJ,yBAAyB,CAC1B;IACH;IAEA,OAAO,oBAAO,EAAC,YAAM;MACnB,IAAIJ,MAAM;MACV,IAAI;QACFA,MAAM,GAAGK,WAAW,EAAE;MACxB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACd,OAAOD,eAAe;MACxB;MAEA,IAAI,CAACV,SAAS,CAACC,MAAM,CAAC,EAAE;QACtB,MAAMO,YAAY;MACpB;MAEA,OAAOE,eAAe;IACxB,CAAC,EAAEH,OAAO,CAAC;EACb;EAAA;AAAA","names":["default","isRemoved","result","Array","isArray","length","waitForElementToBeRemoved","expectation","options","timeoutError","ErrorWithStack","initialElements","error"],"sources":["../src/waitForElementToBeRemoved.ts"],"sourcesContent":["import waitFor from './waitFor';\nimport type { WaitForOptions } from './waitFor';\nimport { ErrorWithStack } from './helpers/errors';\n\nfunction isRemoved<T>(result: T): boolean {\n  return !result || (Array.isArray(result) && !result.length);\n}\n\nexport default async function waitForElementToBeRemoved<T>(\n  expectation: () => T,\n  options?: WaitForOptions\n): Promise<T> {\n  // Created here so we get a nice stacktrace\n  const timeoutError = new ErrorWithStack(\n    'Timed out in waitForElementToBeRemoved.',\n    waitForElementToBeRemoved\n  );\n\n  // Elements have to be present initally and then removed.\n  const initialElements = expectation();\n  if (isRemoved(initialElements)) {\n    throw new ErrorWithStack(\n      'The element(s) given to waitForElementToBeRemoved are already removed. waitForElementToBeRemoved requires that the element(s) exist(s) before waiting for removal.',\n      waitForElementToBeRemoved\n    );\n  }\n\n  return waitFor(() => {\n    let result;\n    try {\n      result = expectation();\n    } catch (error) {\n      return initialElements;\n    }\n\n    if (!isRemoved(result)) {\n      throw timeoutError;\n    }\n\n    return initialElements;\n  }, options);\n}\n"]}