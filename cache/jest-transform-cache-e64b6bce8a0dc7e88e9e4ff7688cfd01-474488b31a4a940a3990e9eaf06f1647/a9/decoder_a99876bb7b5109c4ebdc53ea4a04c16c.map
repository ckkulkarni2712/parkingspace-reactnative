{"version":3,"names":["module","exports","decoder","Enum","require","types","util","missing","field","name","mtype","gen","codegen","fieldsArray","filter","map","length","group","i","_fieldsArray","resolve","type","resolvedType","ref","safeProp","id","defaults","keyType","undefined","basic","long","repeated","packed","rfield","required"],"sources":["decoder.js"],"sourcesContent":["\"use strict\";\nmodule.exports = decoder;\n\nvar Enum    = require(\"./enum\"),\n    types   = require(\"./types\"),\n    util    = require(\"./util\");\n\nfunction missing(field) {\n    return \"missing required '\" + field.name + \"'\";\n}\n\n/**\n * Generates a decoder specific to the specified message type.\n * @param {Type} mtype Message type\n * @returns {Codegen} Codegen instance\n */\nfunction decoder(mtype) {\n    /* eslint-disable no-unexpected-multiline */\n    var gen = util.codegen([\"r\", \"l\"], mtype.name + \"$decode\")\n    (\"if(!(r instanceof Reader))\")\n        (\"r=Reader.create(r)\")\n    (\"var c=l===undefined?r.len:r.pos+l,m=new this.ctor\" + (mtype.fieldsArray.filter(function(field) { return field.map; }).length ? \",k,value\" : \"\"))\n    (\"while(r.pos<c){\")\n        (\"var t=r.uint32()\");\n    if (mtype.group) gen\n        (\"if((t&7)===4)\")\n            (\"break\");\n    gen\n        (\"switch(t>>>3){\");\n\n    var i = 0;\n    for (; i < /* initializes */ mtype.fieldsArray.length; ++i) {\n        var field = mtype._fieldsArray[i].resolve(),\n            type  = field.resolvedType instanceof Enum ? \"int32\" : field.type,\n            ref   = \"m\" + util.safeProp(field.name); gen\n            (\"case %i:\", field.id);\n\n        // Map fields\n        if (field.map) { gen\n                (\"if(%s===util.emptyObject)\", ref)\n                    (\"%s={}\", ref)\n                (\"var c2 = r.uint32()+r.pos\");\n\n            if (types.defaults[field.keyType] !== undefined) gen\n                (\"k=%j\", types.defaults[field.keyType]);\n            else gen\n                (\"k=null\");\n\n            if (types.defaults[type] !== undefined) gen\n                (\"value=%j\", types.defaults[type]);\n            else gen\n                (\"value=null\");\n\n            gen\n                (\"while(r.pos<c2){\")\n                    (\"var tag2=r.uint32()\")\n                    (\"switch(tag2>>>3){\")\n                        (\"case 1: k=r.%s(); break\", field.keyType)\n                        (\"case 2:\");\n\n            if (types.basic[type] === undefined) gen\n                            (\"value=types[%i].decode(r,r.uint32())\", i); // can't be groups\n            else gen\n                            (\"value=r.%s()\", type);\n\n            gen\n                            (\"break\")\n                        (\"default:\")\n                            (\"r.skipType(tag2&7)\")\n                            (\"break\")\n                    (\"}\")\n                (\"}\");\n\n            if (types.long[field.keyType] !== undefined) gen\n                (\"%s[typeof k===\\\"object\\\"?util.longToHash(k):k]=value\", ref);\n            else gen\n                (\"%s[k]=value\", ref);\n\n        // Repeated fields\n        } else if (field.repeated) { gen\n\n                (\"if(!(%s&&%s.length))\", ref, ref)\n                    (\"%s=[]\", ref);\n\n            // Packable (always check for forward and backward compatiblity)\n            if (types.packed[type] !== undefined) gen\n                (\"if((t&7)===2){\")\n                    (\"var c2=r.uint32()+r.pos\")\n                    (\"while(r.pos<c2)\")\n                        (\"%s.push(r.%s())\", ref, type)\n                (\"}else\");\n\n            // Non-packed\n            if (types.basic[type] === undefined) gen(field.resolvedType.group\n                    ? \"%s.push(types[%i].decode(r))\"\n                    : \"%s.push(types[%i].decode(r,r.uint32()))\", ref, i);\n            else gen\n                    (\"%s.push(r.%s())\", ref, type);\n\n        // Non-repeated\n        } else if (types.basic[type] === undefined) gen(field.resolvedType.group\n                ? \"%s=types[%i].decode(r)\"\n                : \"%s=types[%i].decode(r,r.uint32())\", ref, i);\n        else gen\n                (\"%s=r.%s()\", ref, type);\n        gen\n                (\"break\");\n    // Unknown fields\n    } gen\n            (\"default:\")\n                (\"r.skipType(t&7)\")\n                (\"break\")\n\n        (\"}\")\n    (\"}\");\n\n    // Field presence\n    for (i = 0; i < mtype._fieldsArray.length; ++i) {\n        var rfield = mtype._fieldsArray[i];\n        if (rfield.required) gen\n    (\"if(!m.hasOwnProperty(%j))\", rfield.name)\n        (\"throw util.ProtocolError(%j,{instance:m})\", missing(rfield));\n    }\n\n    return gen\n    (\"return m\");\n    /* eslint-enable no-unexpected-multiline */\n}\n"],"mappings":"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"}