{"version":3,"names":["utf8","exports","length","utf8_length","string","len","c","i","charCodeAt","read","utf8_read","buffer","start","end","parts","chunk","t","push","String","fromCharCode","apply","slice","join","write","utf8_write","offset","c1","c2"],"sources":["index.js"],"sourcesContent":["\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n"],"mappings":"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"}