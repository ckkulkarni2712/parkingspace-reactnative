7406ce1350fe9439baa560ba04166688
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.accessiblityValueKeys = exports.accessibilityStateKeys = void 0;
exports.isAccessibilityElement = isAccessibilityElement;
exports.isHiddenFromAccessibility = isHiddenFromAccessibility;
exports.isInaccessible = void 0;
var _reactNative = require("react-native");
var _componentTree = require("./component-tree");
var accessibilityStateKeys = ['disabled', 'selected', 'checked', 'busy', 'expanded'];
exports.accessibilityStateKeys = accessibilityStateKeys;
var accessiblityValueKeys = ['min', 'max', 'now', 'text'];
exports.accessiblityValueKeys = accessiblityValueKeys;
function isHiddenFromAccessibility(element) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    cache = _ref.cache;
  if (element == null) {
    return true;
  }
  var current = element;
  while (current) {
    var isCurrentSubtreeInaccessible = cache == null ? void 0 : cache.get(current);
    if (isCurrentSubtreeInaccessible === undefined) {
      isCurrentSubtreeInaccessible = isSubtreeInaccessible(current);
      cache == null ? void 0 : cache.set(current, isCurrentSubtreeInaccessible);
    }
    if (isCurrentSubtreeInaccessible) {
      return true;
    }
    current = current.parent;
  }
  return false;
}
var isInaccessible = isHiddenFromAccessibility;
exports.isInaccessible = isInaccessible;
function isSubtreeInaccessible(element) {
  var _reactNative$StyleShe;
  if (element.props.accessibilityElementsHidden) {
    return true;
  }
  if (element.props.importantForAccessibility === 'no-hide-descendants') {
    return true;
  }
  var flatStyle = (_reactNative$StyleShe = _reactNative.StyleSheet.flatten(element.props.style)) != null ? _reactNative$StyleShe : {};
  if (flatStyle.display === 'none') return true;
  var hostSiblings = (0, _componentTree.getHostSiblings)(element);
  if (hostSiblings.some(function (sibling) {
    return sibling.props.accessibilityViewIsModal;
  })) {
    return true;
  }
  return false;
}
function isAccessibilityElement(element) {
  if (element == null) {
    return false;
  }
  if (element.props.accessible !== undefined) {
    return element.props.accessible;
  }
  return (0, _componentTree.isHostElementForType)(element, _reactNative.Text) || (0, _componentTree.isHostElementForType)(element, _reactNative.TextInput) || (0, _componentTree.isHostElementForType)(element, _reactNative.Switch);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFTQTtBQU1PLElBQU1BLHNCQUFvRCxHQUFHLENBQ2xFLFVBQVUsRUFDVixVQUFVLEVBQ1YsU0FBUyxFQUNULE1BQU0sRUFDTixVQUFVLENBQ1g7QUFBQ0M7QUFFSyxJQUFNQyxxQkFBbUQsR0FBRyxDQUNqRSxLQUFLLEVBQ0wsS0FBSyxFQUNMLEtBQUssRUFDTCxNQUFNLENBQ1A7QUFBQ0Q7QUFFSyxTQUFTRSx5QkFBeUIsQ0FDdkNDLE9BQWlDLEVBRXhCO0VBQUEsK0VBRDBCLENBQUMsQ0FBQztJQUFuQ0M7RUFFRixJQUFJRCxPQUFPLElBQUksSUFBSSxFQUFFO0lBQ25CLE9BQU8sSUFBSTtFQUNiO0VBRUEsSUFBSUUsT0FBaUMsR0FBR0YsT0FBTztFQUMvQyxPQUFPRSxPQUFPLEVBQUU7SUFDZCxJQUFJQyw0QkFBNEIsR0FBR0YsS0FBSyxvQkFBTEEsS0FBSyxDQUFFRyxHQUFHLENBQUNGLE9BQU8sQ0FBQztJQUV0RCxJQUFJQyw0QkFBNEIsS0FBS0UsU0FBUyxFQUFFO01BQzlDRiw0QkFBNEIsR0FBR0cscUJBQXFCLENBQUNKLE9BQU8sQ0FBQztNQUM3REQsS0FBSyxvQkFBTEEsS0FBSyxDQUFFTSxHQUFHLENBQUNMLE9BQU8sRUFBRUMsNEJBQTRCLENBQUM7SUFDbkQ7SUFFQSxJQUFJQSw0QkFBNEIsRUFBRTtNQUNoQyxPQUFPLElBQUk7SUFDYjtJQUVBRCxPQUFPLEdBQUdBLE9BQU8sQ0FBQ00sTUFBTTtFQUMxQjtFQUVBLE9BQU8sS0FBSztBQUNkO0FBR08sSUFBTUMsY0FBYyxHQUFHVix5QkFBeUI7QUFBQ0Y7QUFFeEQsU0FBU1MscUJBQXFCLENBQUNOLE9BQTBCLEVBQVc7RUFBQTtFQUdsRSxJQUFJQSxPQUFPLENBQUNVLEtBQUssQ0FBQ0MsMkJBQTJCLEVBQUU7SUFDN0MsT0FBTyxJQUFJO0VBQ2I7RUFJQSxJQUFJWCxPQUFPLENBQUNVLEtBQUssQ0FBQ0UseUJBQXlCLEtBQUsscUJBQXFCLEVBQUU7SUFDckUsT0FBTyxJQUFJO0VBQ2I7RUFHQSxJQUFNQyxTQUFTLDRCQUFHQyx1QkFBVSxDQUFDQyxPQUFPLENBQUNmLE9BQU8sQ0FBQ1UsS0FBSyxDQUFDTSxLQUFLLENBQUMsb0NBQUksQ0FBQyxDQUFDO0VBQy9ELElBQUlILFNBQVMsQ0FBQ0ksT0FBTyxLQUFLLE1BQU0sRUFBRSxPQUFPLElBQUk7RUFJN0MsSUFBTUMsWUFBWSxHQUFHLGtDQUFlLEVBQUNsQixPQUFPLENBQUM7RUFDN0MsSUFBSWtCLFlBQVksQ0FBQ0MsSUFBSSxDQUFFQyxpQkFBTztJQUFBLE9BQUtBLE9BQU8sQ0FBQ1YsS0FBSyxDQUFDVyx3QkFBd0I7RUFBQSxFQUFDLEVBQUU7SUFDMUUsT0FBTyxJQUFJO0VBQ2I7RUFFQSxPQUFPLEtBQUs7QUFDZDtBQUVPLFNBQVNDLHNCQUFzQixDQUNwQ3RCLE9BQWlDLEVBQ3hCO0VBQ1QsSUFBSUEsT0FBTyxJQUFJLElBQUksRUFBRTtJQUNuQixPQUFPLEtBQUs7RUFDZDtFQUVBLElBQUlBLE9BQU8sQ0FBQ1UsS0FBSyxDQUFDYSxVQUFVLEtBQUtsQixTQUFTLEVBQUU7SUFDMUMsT0FBT0wsT0FBTyxDQUFDVSxLQUFLLENBQUNhLFVBQVU7RUFDakM7RUFFQSxPQUNFLHVDQUFvQixFQUFDdkIsT0FBTyxFQUFFd0IsaUJBQUksQ0FBQyxJQUNuQyx1Q0FBb0IsRUFBQ3hCLE9BQU8sRUFBRXlCLHNCQUFTLENBQUMsSUFDeEMsdUNBQW9CLEVBQUN6QixPQUFPLEVBQUUwQixtQkFBTSxDQUFDO0FBRXpDIiwibmFtZXMiOlsiYWNjZXNzaWJpbGl0eVN0YXRlS2V5cyIsImV4cG9ydHMiLCJhY2Nlc3NpYmxpdHlWYWx1ZUtleXMiLCJpc0hpZGRlbkZyb21BY2Nlc3NpYmlsaXR5IiwiZWxlbWVudCIsImNhY2hlIiwiY3VycmVudCIsImlzQ3VycmVudFN1YnRyZWVJbmFjY2Vzc2libGUiLCJnZXQiLCJ1bmRlZmluZWQiLCJpc1N1YnRyZWVJbmFjY2Vzc2libGUiLCJzZXQiLCJwYXJlbnQiLCJpc0luYWNjZXNzaWJsZSIsInByb3BzIiwiYWNjZXNzaWJpbGl0eUVsZW1lbnRzSGlkZGVuIiwiaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eSIsImZsYXRTdHlsZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwic3R5bGUiLCJkaXNwbGF5IiwiaG9zdFNpYmxpbmdzIiwic29tZSIsInNpYmxpbmciLCJhY2Nlc3NpYmlsaXR5Vmlld0lzTW9kYWwiLCJpc0FjY2Vzc2liaWxpdHlFbGVtZW50IiwiYWNjZXNzaWJsZSIsIlRleHQiLCJUZXh0SW5wdXQiLCJTd2l0Y2giXSwic291cmNlcyI6WyIuLi8uLi9zcmMvaGVscGVycy9hY2Nlc3NpYmxpdHkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWNjZXNzaWJpbGl0eVN0YXRlLFxuICBBY2Nlc3NpYmlsaXR5VmFsdWUsXG4gIFN0eWxlU2hlZXQsXG4gIFN3aXRjaCxcbiAgVGV4dCxcbiAgVGV4dElucHV0LFxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgUmVhY3RUZXN0SW5zdGFuY2UgfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcbmltcG9ydCB7IGdldEhvc3RTaWJsaW5ncywgaXNIb3N0RWxlbWVudEZvclR5cGUgfSBmcm9tICcuL2NvbXBvbmVudC10cmVlJztcblxudHlwZSBJc0luYWNjZXNzaWJsZU9wdGlvbnMgPSB7XG4gIGNhY2hlPzogV2Vha01hcDxSZWFjdFRlc3RJbnN0YW5jZSwgYm9vbGVhbj47XG59O1xuXG5leHBvcnQgY29uc3QgYWNjZXNzaWJpbGl0eVN0YXRlS2V5czogKGtleW9mIEFjY2Vzc2liaWxpdHlTdGF0ZSlbXSA9IFtcbiAgJ2Rpc2FibGVkJyxcbiAgJ3NlbGVjdGVkJyxcbiAgJ2NoZWNrZWQnLFxuICAnYnVzeScsXG4gICdleHBhbmRlZCcsXG5dO1xuXG5leHBvcnQgY29uc3QgYWNjZXNzaWJsaXR5VmFsdWVLZXlzOiAoa2V5b2YgQWNjZXNzaWJpbGl0eVZhbHVlKVtdID0gW1xuICAnbWluJyxcbiAgJ21heCcsXG4gICdub3cnLFxuICAndGV4dCcsXG5dO1xuXG5leHBvcnQgZnVuY3Rpb24gaXNIaWRkZW5Gcm9tQWNjZXNzaWJpbGl0eShcbiAgZWxlbWVudDogUmVhY3RUZXN0SW5zdGFuY2UgfCBudWxsLFxuICB7IGNhY2hlIH06IElzSW5hY2Nlc3NpYmxlT3B0aW9ucyA9IHt9XG4pOiBib29sZWFuIHtcbiAgaWYgKGVsZW1lbnQgPT0gbnVsbCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgbGV0IGN1cnJlbnQ6IFJlYWN0VGVzdEluc3RhbmNlIHwgbnVsbCA9IGVsZW1lbnQ7XG4gIHdoaWxlIChjdXJyZW50KSB7XG4gICAgbGV0IGlzQ3VycmVudFN1YnRyZWVJbmFjY2Vzc2libGUgPSBjYWNoZT8uZ2V0KGN1cnJlbnQpO1xuXG4gICAgaWYgKGlzQ3VycmVudFN1YnRyZWVJbmFjY2Vzc2libGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgaXNDdXJyZW50U3VidHJlZUluYWNjZXNzaWJsZSA9IGlzU3VidHJlZUluYWNjZXNzaWJsZShjdXJyZW50KTtcbiAgICAgIGNhY2hlPy5zZXQoY3VycmVudCwgaXNDdXJyZW50U3VidHJlZUluYWNjZXNzaWJsZSk7XG4gICAgfVxuXG4gICAgaWYgKGlzQ3VycmVudFN1YnRyZWVJbmFjY2Vzc2libGUpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGN1cnJlbnQgPSBjdXJyZW50LnBhcmVudDtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLyoqIFJUTC1jb21wYXRpdGliaWxpdHkgYWxpYXMgZm9yIGBpc0hpZGRlbkZyb21BY2Nlc3NpYmlsaXR5YCAqL1xuZXhwb3J0IGNvbnN0IGlzSW5hY2Nlc3NpYmxlID0gaXNIaWRkZW5Gcm9tQWNjZXNzaWJpbGl0eTtcblxuZnVuY3Rpb24gaXNTdWJ0cmVlSW5hY2Nlc3NpYmxlKGVsZW1lbnQ6IFJlYWN0VGVzdEluc3RhbmNlKTogYm9vbGVhbiB7XG4gIC8vIGlPUzogYWNjZXNzaWJpbGl0eUVsZW1lbnRzSGlkZGVuXG4gIC8vIFNlZTogaHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9hY2Nlc3NpYmlsaXR5I2FjY2Vzc2liaWxpdHllbGVtZW50c2hpZGRlbi1pb3NcbiAgaWYgKGVsZW1lbnQucHJvcHMuYWNjZXNzaWJpbGl0eUVsZW1lbnRzSGlkZGVuKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICAvLyBBbmRyb2lkOiBpbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5XG4gIC8vIFNlZTogaHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYvZG9jcy9hY2Nlc3NpYmlsaXR5I2ltcG9ydGFudGZvcmFjY2Vzc2liaWxpdHktYW5kcm9pZFxuICBpZiAoZWxlbWVudC5wcm9wcy5pbXBvcnRhbnRGb3JBY2Nlc3NpYmlsaXR5ID09PSAnbm8taGlkZS1kZXNjZW5kYW50cycpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIC8vIE5vdGUgdGhhdCBgb3BhY2l0eTogMGAgaXMgbm90IHRyZWF0ZWQgYXMgaW5hY2Nlc3NpYmxlIG9uIGlPU1xuICBjb25zdCBmbGF0U3R5bGUgPSBTdHlsZVNoZWV0LmZsYXR0ZW4oZWxlbWVudC5wcm9wcy5zdHlsZSkgPz8ge307XG4gIGlmIChmbGF0U3R5bGUuZGlzcGxheSA9PT0gJ25vbmUnKSByZXR1cm4gdHJ1ZTtcblxuICAvLyBpT1M6IGFjY2Vzc2liaWxpdHlWaWV3SXNNb2RhbFxuICAvLyBTZWU6IGh0dHBzOi8vcmVhY3RuYXRpdmUuZGV2L2RvY3MvYWNjZXNzaWJpbGl0eSNhY2Nlc3NpYmlsaXR5dmlld2lzbW9kYWwtaW9zXG4gIGNvbnN0IGhvc3RTaWJsaW5ncyA9IGdldEhvc3RTaWJsaW5ncyhlbGVtZW50KTtcbiAgaWYgKGhvc3RTaWJsaW5ncy5zb21lKChzaWJsaW5nKSA9PiBzaWJsaW5nLnByb3BzLmFjY2Vzc2liaWxpdHlWaWV3SXNNb2RhbCkpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzQWNjZXNzaWJpbGl0eUVsZW1lbnQoXG4gIGVsZW1lbnQ6IFJlYWN0VGVzdEluc3RhbmNlIHwgbnVsbFxuKTogYm9vbGVhbiB7XG4gIGlmIChlbGVtZW50ID09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoZWxlbWVudC5wcm9wcy5hY2Nlc3NpYmxlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5wcm9wcy5hY2Nlc3NpYmxlO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICBpc0hvc3RFbGVtZW50Rm9yVHlwZShlbGVtZW50LCBUZXh0KSB8fFxuICAgIGlzSG9zdEVsZW1lbnRGb3JUeXBlKGVsZW1lbnQsIFRleHRJbnB1dCkgfHxcbiAgICBpc0hvc3RFbGVtZW50Rm9yVHlwZShlbGVtZW50LCBTd2l0Y2gpXG4gICk7XG59XG4iXX0=