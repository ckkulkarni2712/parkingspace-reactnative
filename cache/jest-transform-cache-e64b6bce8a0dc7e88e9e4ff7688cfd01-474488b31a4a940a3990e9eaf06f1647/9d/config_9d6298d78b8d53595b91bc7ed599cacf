4c0a1dbf9174dae8d94a36c4a6bf28de
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["defaultHidden"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configure = configure;
exports.configureInternal = configureInternal;
exports.getConfig = getConfig;
exports.resetToDefaults = resetToDefaults;
var defaultConfig = {
  useBreakingChanges: false,
  asyncUtilTimeout: 1000,
  defaultIncludeHiddenElements: true
};
var config = Object.assign({}, defaultConfig);
function configure(options) {
  var _ref, _restOptions$defaultI;
  var defaultHidden = options.defaultHidden,
    restOptions = (0, _objectWithoutProperties2.default)(options, _excluded);
  var defaultIncludeHiddenElements = (_ref = (_restOptions$defaultI = restOptions.defaultIncludeHiddenElements) != null ? _restOptions$defaultI : defaultHidden) != null ? _ref : config.defaultIncludeHiddenElements;
  config = Object.assign({}, config, restOptions, {
    defaultIncludeHiddenElements: defaultIncludeHiddenElements
  });
}
function configureInternal(option) {
  config = Object.assign({}, config, option);
}
function resetToDefaults() {
  config = Object.assign({}, defaultConfig);
}
function getConfig() {
  return config;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBbUNBLElBQU1BLGFBQTZCLEdBQUc7RUFDcENDLGtCQUFrQixFQUFFLEtBQUs7RUFDekJDLGdCQUFnQixFQUFFLElBQUk7RUFDdEJDLDRCQUE0QixFQUFFO0FBQ2hDLENBQUM7QUFFRCxJQUFJQyxNQUFNLHFCQUFRSixjQUFlO0FBSzFCLFNBQVNLLFNBQVMsQ0FBQ0MsT0FBNkMsRUFBRTtFQUFBO0VBQ3ZFLElBQVFDLGFBQWEsR0FBcUJELE9BQU8sQ0FBekNDLGFBQWE7SUFBS0MscURBQWdCRixPQUFPO0VBRWpELElBQU1ILDRCQUE0QixvQ0FDaENLLFdBQVcsQ0FBQ0wsNEJBQTRCLG9DQUN4Q0ksYUFBYSxtQkFDYkgsTUFBTSxDQUFDRCw0QkFBNEI7RUFFckNDLE1BQU0scUJBQ0RBLE1BQU0sRUFDTkksV0FBVztJQUNkTDtFQUFBQSxFQUNEO0FBQ0g7QUFFTyxTQUFTTSxpQkFBaUIsQ0FBQ0MsTUFBK0IsRUFBRTtFQUNqRU4sTUFBTSxxQkFDREEsTUFBTSxFQUNOTSxPQUNKO0FBQ0g7QUFFTyxTQUFTQyxlQUFlLEdBQUc7RUFDaENQLE1BQU0scUJBQVFKLGNBQWU7QUFDL0I7QUFFTyxTQUFTWSxTQUFTLEdBQUc7RUFDMUIsT0FBT1IsTUFBTTtBQUNmIiwibmFtZXMiOlsiZGVmYXVsdENvbmZpZyIsInVzZUJyZWFraW5nQ2hhbmdlcyIsImFzeW5jVXRpbFRpbWVvdXQiLCJkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzIiwiY29uZmlnIiwiY29uZmlndXJlIiwib3B0aW9ucyIsImRlZmF1bHRIaWRkZW4iLCJyZXN0T3B0aW9ucyIsImNvbmZpZ3VyZUludGVybmFsIiwib3B0aW9uIiwicmVzZXRUb0RlZmF1bHRzIiwiZ2V0Q29uZmlnIl0sInNvdXJjZXMiOlsiLi4vc3JjL2NvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEZWJ1Z09wdGlvbnMgfSBmcm9tICcuL2hlbHBlcnMvZGVidWdEZWVwJztcblxuLyoqXG4gKiBHbG9iYWwgY29uZmlndXJhdGlvbiBvcHRpb25zIGZvciBSZWFjdCBOYXRpdmUgVGVzdGluZyBMaWJyYXJ5LlxuICovXG5cbmV4cG9ydCB0eXBlIENvbmZpZyA9IHtcbiAgLyoqIERlZmF1bHQgdGltZW91dCwgaW4gbXMsIGZvciBgd2FpdEZvcmAgYW5kIGBmaW5kQnkqYCBxdWVyaWVzLiAqL1xuICBhc3luY1V0aWxUaW1lb3V0OiBudW1iZXI7XG5cbiAgLyoqIERlZmF1bHQgdmFsdWUgZm9yIGBpbmNsdWRlSGlkZGVuRWxlbWVudHNgIHF1ZXJ5IG9wdGlvbi4gKi9cbiAgZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50czogYm9vbGVhbjtcblxuICAvKiogRGVmYXVsdCBvcHRpb25zIGZvciBgZGVidWdgIGhlbHBlci4gKi9cbiAgZGVmYXVsdERlYnVnT3B0aW9ucz86IFBhcnRpYWw8RGVidWdPcHRpb25zPjtcbn07XG5cbmV4cG9ydCB0eXBlIENvbmZpZ0FsaWFzT3B0aW9ucyA9IHtcbiAgLyoqIFJUTC1jb21wYXRpYmlsaXR5IGFsaWFzIHRvIGBkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzYCAqL1xuICBkZWZhdWx0SGlkZGVuOiBib29sZWFuO1xufTtcblxuZXhwb3J0IHR5cGUgSG9zdENvbXBvbmVudE5hbWVzID0ge1xuICB0ZXh0OiBzdHJpbmc7XG4gIHRleHRJbnB1dDogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgSW50ZXJuYWxDb25maWcgPSBDb25maWcgJiB7XG4gIC8qKiBXaGV0aGVyIHRvIHVzZSBicmVha2luZyBjaGFuZ2VzIGludGVuZGVkIGZvciBuZXh0IG1ham9yIHZlcnNpb24gcmVsZWFzZS4gKi9cbiAgdXNlQnJlYWtpbmdDaGFuZ2VzOiBib29sZWFuO1xuXG4gIC8qKiBOYW1lcyBmb3Iga2V5IFJlYWN0IE5hdGl2ZSBob3N0IGNvbXBvbmVudHMuICovXG4gIGhvc3RDb21wb25lbnROYW1lcz86IEhvc3RDb21wb25lbnROYW1lcztcbn07XG5cbmNvbnN0IGRlZmF1bHRDb25maWc6IEludGVybmFsQ29uZmlnID0ge1xuICB1c2VCcmVha2luZ0NoYW5nZXM6IGZhbHNlLFxuICBhc3luY1V0aWxUaW1lb3V0OiAxMDAwLFxuICBkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzOiB0cnVlLFxufTtcblxubGV0IGNvbmZpZyA9IHsgLi4uZGVmYXVsdENvbmZpZyB9O1xuXG4vKipcbiAqIENvbmZpZ3VyZSBnbG9iYWwgb3B0aW9ucyBmb3IgUmVhY3QgTmF0aXZlIFRlc3RpbmcgTGlicmFyeS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZShvcHRpb25zOiBQYXJ0aWFsPENvbmZpZyAmIENvbmZpZ0FsaWFzT3B0aW9ucz4pIHtcbiAgY29uc3QgeyBkZWZhdWx0SGlkZGVuLCAuLi5yZXN0T3B0aW9ucyB9ID0gb3B0aW9ucztcblxuICBjb25zdCBkZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzID1cbiAgICByZXN0T3B0aW9ucy5kZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzID8/XG4gICAgZGVmYXVsdEhpZGRlbiA/P1xuICAgIGNvbmZpZy5kZWZhdWx0SW5jbHVkZUhpZGRlbkVsZW1lbnRzO1xuXG4gIGNvbmZpZyA9IHtcbiAgICAuLi5jb25maWcsXG4gICAgLi4ucmVzdE9wdGlvbnMsXG4gICAgZGVmYXVsdEluY2x1ZGVIaWRkZW5FbGVtZW50cyxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZUludGVybmFsKG9wdGlvbjogUGFydGlhbDxJbnRlcm5hbENvbmZpZz4pIHtcbiAgY29uZmlnID0ge1xuICAgIC4uLmNvbmZpZyxcbiAgICAuLi5vcHRpb24sXG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldFRvRGVmYXVsdHMoKSB7XG4gIGNvbmZpZyA9IHsgLi4uZGVmYXVsdENvbmZpZyB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29uZmlnKCkge1xuICByZXR1cm4gY29uZmlnO1xufVxuIl19