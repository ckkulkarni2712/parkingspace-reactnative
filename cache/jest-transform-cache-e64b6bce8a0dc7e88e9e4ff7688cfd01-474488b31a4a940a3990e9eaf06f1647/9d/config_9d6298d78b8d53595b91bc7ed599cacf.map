{"version":3,"mappings":";;;;;;;;;;;;AAmCA,IAAMA,aAA6B,GAAG;EACpCC,kBAAkB,EAAE,KAAK;EACzBC,gBAAgB,EAAE,IAAI;EACtBC,4BAA4B,EAAE;AAChC,CAAC;AAED,IAAIC,MAAM,qBAAQJ,cAAe;AAK1B,SAASK,SAAS,CAACC,OAA6C,EAAE;EAAA;EACvE,IAAQC,aAAa,GAAqBD,OAAO,CAAzCC,aAAa;IAAKC,qDAAgBF,OAAO;EAEjD,IAAMH,4BAA4B,oCAChCK,WAAW,CAACL,4BAA4B,oCACxCI,aAAa,mBACbH,MAAM,CAACD,4BAA4B;EAErCC,MAAM,qBACDA,MAAM,EACNI,WAAW;IACdL;EAAAA,EACD;AACH;AAEO,SAASM,iBAAiB,CAACC,MAA+B,EAAE;EACjEN,MAAM,qBACDA,MAAM,EACNM,OACJ;AACH;AAEO,SAASC,eAAe,GAAG;EAChCP,MAAM,qBAAQJ,cAAe;AAC/B;AAEO,SAASY,SAAS,GAAG;EAC1B,OAAOR,MAAM;AACf","names":["defaultConfig","useBreakingChanges","asyncUtilTimeout","defaultIncludeHiddenElements","config","configure","options","defaultHidden","restOptions","configureInternal","option","resetToDefaults","getConfig"],"sources":["../src/config.ts"],"sourcesContent":["import { DebugOptions } from './helpers/debugDeep';\n\n/**\n * Global configuration options for React Native Testing Library.\n */\n\nexport type Config = {\n  /** Default timeout, in ms, for `waitFor` and `findBy*` queries. */\n  asyncUtilTimeout: number;\n\n  /** Default value for `includeHiddenElements` query option. */\n  defaultIncludeHiddenElements: boolean;\n\n  /** Default options for `debug` helper. */\n  defaultDebugOptions?: Partial<DebugOptions>;\n};\n\nexport type ConfigAliasOptions = {\n  /** RTL-compatibility alias to `defaultIncludeHiddenElements` */\n  defaultHidden: boolean;\n};\n\nexport type HostComponentNames = {\n  text: string;\n  textInput: string;\n};\n\nexport type InternalConfig = Config & {\n  /** Whether to use breaking changes intended for next major version release. */\n  useBreakingChanges: boolean;\n\n  /** Names for key React Native host components. */\n  hostComponentNames?: HostComponentNames;\n};\n\nconst defaultConfig: InternalConfig = {\n  useBreakingChanges: false,\n  asyncUtilTimeout: 1000,\n  defaultIncludeHiddenElements: true,\n};\n\nlet config = { ...defaultConfig };\n\n/**\n * Configure global options for React Native Testing Library.\n */\nexport function configure(options: Partial<Config & ConfigAliasOptions>) {\n  const { defaultHidden, ...restOptions } = options;\n\n  const defaultIncludeHiddenElements =\n    restOptions.defaultIncludeHiddenElements ??\n    defaultHidden ??\n    config.defaultIncludeHiddenElements;\n\n  config = {\n    ...config,\n    ...restOptions,\n    defaultIncludeHiddenElements,\n  };\n}\n\nexport function configureInternal(option: Partial<InternalConfig>) {\n  config = {\n    ...config,\n    ...option,\n  };\n}\n\nexport function resetToDefaults() {\n  config = { ...defaultConfig };\n}\n\nexport function getConfig() {\n  return config;\n}\n"]}