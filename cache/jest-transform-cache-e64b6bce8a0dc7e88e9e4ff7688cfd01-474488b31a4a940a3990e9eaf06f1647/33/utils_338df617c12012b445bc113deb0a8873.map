{"version":3,"names":["toMilliseconds","options","keys","forEach","each","key","value","Object","prototype","toString","call","getTime","dateToMilliseconds","date","sharedPropsValidation","invariant","Date"],"sources":["utils.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport type {DatePickerOptions, TimePickerOptions} from './types';\nimport invariant from 'invariant';\n\n/**\n * Convert a Date to a timestamp.\n */\nexport function toMilliseconds(\n  options: DatePickerOptions | TimePickerOptions,\n  ...keys: Array<string>\n) {\n  keys.forEach(function each(key) {\n    const value = options[key];\n\n    // Is it a valid Date object?\n    // $FlowFixMe: Cannot get `Object.prototype.toString` because property `toString` [1] cannot be unbound from the context [2] where it was defined.\n    if (Object.prototype.toString.call(value) === '[object Date]') {\n      options[key] = value.getTime();\n    }\n  });\n}\n\nexport function dateToMilliseconds(date: ?Date): ?number {\n  if (!date) {\n    return;\n  }\n  return date.getTime();\n}\n\nexport function sharedPropsValidation({value}: {value: ?Date}) {\n  invariant(value, 'A date or time must be specified as `value` prop');\n  invariant(\n    value instanceof Date,\n    '`value` prop must be an instance of Date object',\n  );\n}\n"],"mappings":";;;;;;;AAKA;AAKO,SAASA,cAAc,CAC5BC,OAA8C,EAE9C;EAAA,kCADGC,IAAI;IAAJA,IAAI;EAAA;EAEPA,IAAI,CAACC,OAAO,CAAC,SAASC,IAAI,CAACC,GAAG,EAAE;IAC9B,IAAMC,KAAK,GAAGL,OAAO,CAACI,GAAG,CAAC;IAI1B,IAAIE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,KAAK,CAAC,KAAK,eAAe,EAAE;MAC7DL,OAAO,CAACI,GAAG,CAAC,GAAGC,KAAK,CAACK,OAAO,EAAE;IAChC;EACF,CAAC,CAAC;AACJ;AAEO,SAASC,kBAAkB,CAACC,IAAW,EAAW;EACvD,IAAI,CAACA,IAAI,EAAE;IACT;EACF;EACA,OAAOA,IAAI,CAACF,OAAO,EAAE;AACvB;AAEO,SAASG,qBAAqB,OAA0B;EAAA,IAAxBR,KAAK,QAALA,KAAK;EAC1C,IAAAS,kBAAS,EAACT,KAAK,EAAE,kDAAkD,CAAC;EACpE,IAAAS,kBAAS,EACPT,KAAK,YAAYU,IAAI,EACrB,iDAAiD,CAClD;AACH"}