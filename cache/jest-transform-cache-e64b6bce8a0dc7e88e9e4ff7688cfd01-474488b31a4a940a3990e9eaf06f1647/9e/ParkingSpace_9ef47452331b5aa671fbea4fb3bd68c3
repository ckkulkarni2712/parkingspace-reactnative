54acef6284af311e034d08c55b0f7f37
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeModalDatetimePicker = _interopRequireDefault(require("react-native-modal-datetime-picker"));
var _native = require("@react-navigation/native");
var _reactRedux = require("react-redux");
var _parkingSlice = require("./Reducer/parkingSlice");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var ParkingSpace = function ParkingSpace() {
  var navigation = (0, _native.useNavigation)();
  var dispatch = (0, _reactRedux.useDispatch)();
  var numspaces = (0, _reactRedux.useSelector)(function (state) {
    return state.parkingSpaces.numSpaces;
  });
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    displayForm = _useState2[0],
    setDisplayForm = _useState2[1];
  var _useState3 = (0, _react.useState)(''),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    registration = _useState4[0],
    setReg = _useState4[1];
  var _useState5 = (0, _react.useState)(new Date()),
    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),
    parkingTime = _useState6[0],
    setTime = _useState6[1];
  var _useState7 = (0, _react.useState)(0),
    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),
    selectedSpace = _useState8[0],
    setSelected = _useState8[1];
  var _useState9 = (0, _react.useState)(false),
    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),
    activatePayment = _useState10[0],
    setActivation = _useState10[1];
  var spaces = (0, _reactRedux.useSelector)(function (state) {
    return state.parkingSpaces.spaces;
  });
  var _useState11 = (0, _react.useState)(false),
    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),
    showPicker = _useState12[0],
    setPicker = _useState12[1];
  var _useState13 = (0, _react.useState)(function () {
      var renderSpaces = [];
      for (var i = 1; i <= numspaces; i++) {
        renderSpaces.push(i);
      }
      return renderSpaces;
    }),
    _useState14 = (0, _slicedToArray2.default)(_useState13, 2),
    displaySpaces = _useState14[0],
    setDisplay = _useState14[1];
  (0, _react.useEffect)(function () {
    var renderSpaces = [];
    for (var i = 1; i <= numspaces; i++) {
      renderSpaces.push(i);
    }
    setDisplay(renderSpaces);
  }, [numspaces]);
  var handleIncrement = function handleIncrement() {
    dispatch((0, _parkingSlice.addToParkingSpace)());
  };
  var handleDecrement = function handleDecrement() {
    dispatch((0, _parkingSlice.removeParkingSpace)());
  };
  var handleSpaceClick = function handleSpaceClick(space) {
    if (spaces[space]) {
      navigation.navigate('Payment', {
        spaceDetails: spaces[space],
        space: space
      });
    }
    setSelected(space);
    setDisplayForm(true);
  };
  var handleSubmit = function handleSubmit() {
    dispatch((0, _parkingSlice.occupyParkingLots)({
      spaceNum: selectedSpace,
      registration: registration,
      parkingTime: parkingTime.toLocaleTimeString([], {
        hour: '2-digit',
        minute: '2-digit',
        hour12: false
      })
    }));
    setSelected(0);
    setReg('');
    setTime(new Date());
  };
  var handleRegistration = function handleRegistration(text) {
    setReg(text);
  };
  var setParkingTime = function setParkingTime(selectedTime) {
    setTime(selectedTime);
  };
  var hidePicker = function hidePicker() {
    setPicker(false);
  };
  return (0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {
    contentContainerStyle: styles.container,
    horizontal: true,
    children: [(0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      testID: "add-parking-space-button",
      style: styles.buttonStyling1,
      onPress: handleIncrement,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        children: "Create New Parking"
      })
    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
      testID: "remove-parking-space-button",
      onPress: handleDecrement,
      style: styles.buttonStyling2,
      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
        children: "Remove Parking Space"
      })
    }), displaySpaces.map(function (space) {
      return (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
        testID: "parking-space-" + space,
        onPress: function onPress() {
          return handleSpaceClick(space);
        },
        style: styles.parkingSpace,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          children: space
        }), spaces[space] && (0, _jsxRuntime.jsxs)(_reactNative.View, {
          children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
            children: ["Registration: ", spaces[space].registration]
          }), (0, _jsxRuntime.jsxs)(_reactNative.Text, {
            children: ["Parking Time: ", spaces[space].parkingTime]
          })]
        })]
      }, space);
    }), displayForm && (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.formContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNativeModalDatetimePicker.default, {
        isVisible: showPicker,
        mode: "time",
        onConfirm: setParkingTime,
        onCancel: function onCancel() {
          return hidePicker();
        }
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        testID: "parking-time-label",
        children: "Parking Time (tap to change)"
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.setTimeButton,
        onPress: function onPress() {
          setPicker(true);
        },
        testID: "change-time-button",
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          testID: "parking-time",
          children: parkingTime.toLocaleTimeString()
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        testID: "car-registration-label",
        children: "Car Registration"
      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        placeholder: "Enter vehicle registration",
        onChangeText: handleRegistration,
        style: styles.formInput,
        testID: "vehicle-registration-input"
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        testID: "submit-button",
        onPress: function onPress() {
          return handleSubmit();
        },
        style: styles.buttonStyling3,
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: {
            color: 'white'
          },
          children: "Submit"
        })
      }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        style: styles.buttonStyling3,
        onPress: function onPress() {
          setSelected(0);
          handleRegistration('');
          setParkingTime(new Date());
          setDisplayForm(false);
        },
        testID: "close-button",
        children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: {
            color: 'white'
          },
          children: "Close"
        })
      })]
    })]
  });
};
var _default = ParkingSpace;
exports.default = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    flexGrow: 1,
    alignItems: 'center',
    flexDirection: 'column',
    flexWrap: 'wrap',
    justifyContent: 'center',
    backgroundColor: '#F5EFEF'
  },
  parkingSpace: {
    width: 110,
    backgroundColor: '#EFEFEF',
    height: 85,
    borderWidth: 2.5,
    borderStyle: 'dotted',
    borderColor: '#49C78C',
    margin: 5,
    marginHorizontal: 48,
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: 20
  },
  parkingNumber: {
    fontSize: 20
  },
  buttonStyling1: {
    top: 0,
    position: 'absolute',
    padding: 10,
    backgroundColor: '#E1EDF8',
    left: 50
  },
  buttonStyling2: {
    top: 0,
    right: 10,
    position: 'absolute',
    padding: 10,
    backgroundColor: '#E1EDF8'
  },
  formInput: {
    marginTop: 7,
    width: '100%',
    height: 33,
    borderWidth: 1,
    borderColor: '#ccc',
    padding: 7,
    flex: 1,
    textAlign: 'center'
  },
  formContainer: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    backgroundColor: '#FFFFFF',
    paddingHorizontal: 20,
    paddingVertical: 10,
    zIndex: 1
  },
  buttonStyling3: {
    marginTop: 5,
    backgroundColor: '#0551B4',
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    padding: 7,
    borderRadius: 5
  },
  setTimeButton: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: 'white',
    borderWidth: 1,
    padding: 5
  },
  spaceDetails: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#0551B4',
    padding: 25
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,