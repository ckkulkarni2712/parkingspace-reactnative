{"version":3,"names":["Object","defineProperty","exports","value","default","TestEnvironment","_vm","data","require","_fakeTimers","_jestMock","_jestUtil","denyList","Set","nodeGlobals","Map","getOwnPropertyNames","globalThis","filter","global","has","map","nodeGlobalsKey","descriptor","getOwnPropertyDescriptor","Error","isString","NodeEnvironment","config","_context","context","fakeTimers","fakeTimersModern","moduleMocker","customExportConditions","projectConfig","createContext","runInContext","assign","testEnvironmentOptions","contextGlobals","configurable","enumerable","get","val","writable","set","Buffer","ArrayBuffer","Uint8Array","installCommonGlobals","globals","stackTraceLimit","Array","isArray","every","ModuleMocker","timerIdToRef","id","ref","unref","timerRefToId","timer","LegacyFakeTimers","timerConfig","idToRef","refToId","ModernFakeTimers","dispose"],"sources":["index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.TestEnvironment = void 0;\nfunction _vm() {\n  const data = require('vm');\n  _vm = function () {\n    return data;\n  };\n  return data;\n}\nfunction _fakeTimers() {\n  const data = require('@jest/fake-timers');\n  _fakeTimers = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestMock() {\n  const data = require('jest-mock');\n  _jestMock = function () {\n    return data;\n  };\n  return data;\n}\nfunction _jestUtil() {\n  const data = require('jest-util');\n  _jestUtil = function () {\n    return data;\n  };\n  return data;\n}\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// some globals we do not want, either because deprecated or we set it ourselves\nconst denyList = new Set([\n  'GLOBAL',\n  'root',\n  'global',\n  'Buffer',\n  'ArrayBuffer',\n  'Uint8Array',\n  // if env is loaded within a jest test\n  'jest-symbol-do-not-touch'\n]);\nconst nodeGlobals = new Map(\n  Object.getOwnPropertyNames(globalThis)\n    .filter(global => !denyList.has(global))\n    .map(nodeGlobalsKey => {\n      const descriptor = Object.getOwnPropertyDescriptor(\n        globalThis,\n        nodeGlobalsKey\n      );\n      if (!descriptor) {\n        throw new Error(\n          `No property descriptor for ${nodeGlobalsKey}, this is a bug in Jest.`\n        );\n      }\n      return [nodeGlobalsKey, descriptor];\n    })\n);\nfunction isString(value) {\n  return typeof value === 'string';\n}\nclass NodeEnvironment {\n  context;\n  fakeTimers;\n  fakeTimersModern;\n  global;\n  moduleMocker;\n  customExportConditions = ['node', 'node-addons'];\n\n  // while `context` is unused, it should always be passed\n  constructor(config, _context) {\n    const {projectConfig} = config;\n    this.context = (0, _vm().createContext)();\n    const global = (0, _vm().runInContext)(\n      'this',\n      Object.assign(this.context, projectConfig.testEnvironmentOptions)\n    );\n    this.global = global;\n    const contextGlobals = new Set(Object.getOwnPropertyNames(global));\n    for (const [nodeGlobalsKey, descriptor] of nodeGlobals) {\n      if (!contextGlobals.has(nodeGlobalsKey)) {\n        if (descriptor.configurable) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get() {\n              // @ts-expect-error: no index signature\n              const val = globalThis[nodeGlobalsKey];\n\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value: val,\n                writable:\n                  descriptor.writable === true ||\n                  // Node 19 makes performance non-readable. This is probably not the correct solution.\n                  nodeGlobalsKey === 'performance'\n              });\n              return val;\n            },\n            set(val) {\n              // override lazy getter\n              Object.defineProperty(global, nodeGlobalsKey, {\n                configurable: true,\n                enumerable: descriptor.enumerable,\n                value: val,\n                writable: true\n              });\n            }\n          });\n        } else if ('value' in descriptor) {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            value: descriptor.value,\n            writable: descriptor.writable\n          });\n        } else {\n          Object.defineProperty(global, nodeGlobalsKey, {\n            configurable: false,\n            enumerable: descriptor.enumerable,\n            get: descriptor.get,\n            set: descriptor.set\n          });\n        }\n      }\n    }\n\n    // @ts-expect-error - Buffer and gc is \"missing\"\n    global.global = global;\n    global.Buffer = Buffer;\n    global.ArrayBuffer = ArrayBuffer;\n    // TextEncoder (global or via 'util') references a Uint8Array constructor\n    // different than the global one used by users in tests. This makes sure the\n    // same constructor is referenced by both.\n    global.Uint8Array = Uint8Array;\n    (0, _jestUtil().installCommonGlobals)(global, projectConfig.globals);\n\n    // Node's error-message stack size is limited at 10, but it's pretty useful\n    // to see more than that when a test fails.\n    global.Error.stackTraceLimit = 100;\n    if ('customExportConditions' in projectConfig.testEnvironmentOptions) {\n      const {customExportConditions} = projectConfig.testEnvironmentOptions;\n      if (\n        Array.isArray(customExportConditions) &&\n        customExportConditions.every(isString)\n      ) {\n        this.customExportConditions = customExportConditions;\n      } else {\n        throw new Error(\n          'Custom export conditions specified but they are not an array of strings'\n        );\n      }\n    }\n    this.moduleMocker = new (_jestMock().ModuleMocker)(global);\n    const timerIdToRef = id => ({\n      id,\n      ref() {\n        return this;\n      },\n      unref() {\n        return this;\n      }\n    });\n    const timerRefToId = timer => timer?.id;\n    this.fakeTimers = new (_fakeTimers().LegacyFakeTimers)({\n      config: projectConfig,\n      global,\n      moduleMocker: this.moduleMocker,\n      timerConfig: {\n        idToRef: timerIdToRef,\n        refToId: timerRefToId\n      }\n    });\n    this.fakeTimersModern = new (_fakeTimers().ModernFakeTimers)({\n      config: projectConfig,\n      global\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async setup() {}\n  async teardown() {\n    if (this.fakeTimers) {\n      this.fakeTimers.dispose();\n    }\n    if (this.fakeTimersModern) {\n      this.fakeTimersModern.dispose();\n    }\n    this.context = null;\n    this.fakeTimers = null;\n    this.fakeTimersModern = null;\n  }\n  exportConditions() {\n    return this.customExportConditions;\n  }\n  getVmContext() {\n    return this.context;\n  }\n}\nexports.default = NodeEnvironment;\nconst TestEnvironment = NodeEnvironment;\nexports.TestEnvironment = TestEnvironment;\n"],"mappings":"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"}