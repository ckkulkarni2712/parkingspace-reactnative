5fb2a9fe094aa2493727ed6cea0a3aca
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindUnsafeByTypeQueries = void 0;
var _errors = require("../helpers/errors");
var UNSAFE_getByType = function UNSAFE_getByType(instance) {
  return function getByTypeFn(type) {
    try {
      return instance.findByType(type);
    } catch (error) {
      throw new _errors.ErrorWithStack((0, _errors.prepareErrorMessage)(error), getByTypeFn);
    }
  };
};
var UNSAFE_getAllByType = function UNSAFE_getAllByType(instance) {
  return function getAllByTypeFn(type) {
    var results = instance.findAllByType(type);
    if (results.length === 0) {
      throw new _errors.ErrorWithStack('No instances found', getAllByTypeFn);
    }
    return results;
  };
};
var UNSAFE_queryByType = function UNSAFE_queryByType(instance) {
  return function queryByTypeFn(type) {
    try {
      return UNSAFE_getByType(instance)(type);
    } catch (error) {
      return (0, _errors.createQueryByError)(error, queryByTypeFn);
    }
  };
};
var UNSAFE_queryAllByType = function UNSAFE_queryAllByType(instance) {
  return function (type) {
    try {
      return UNSAFE_getAllByType(instance)(type);
    } catch (error) {
      return [];
    }
  };
};
var bindUnsafeByTypeQueries = function bindUnsafeByTypeQueries(instance) {
  return {
    UNSAFE_getByType: UNSAFE_getByType(instance),
    UNSAFE_getAllByType: UNSAFE_getAllByType(instance),
    UNSAFE_queryByType: UNSAFE_queryByType(instance),
    UNSAFE_queryAllByType: UNSAFE_queryAllByType(instance)
  };
};
exports.bindUnsafeByTypeQueries = bindUnsafeByTypeQueries;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUE7QUFHQSxJQUFNQSxnQkFBZ0IsR0FDcEJDLFNBRElELGdCQUFnQixDQUNwQkMsUUFBMkI7RUFBQSxPQUUzQixTQUFTQyxXQUFXLENBQUNDLElBQThCLEVBQUU7SUFDbkQsSUFBSTtNQUNGLE9BQU9GLFFBQVEsQ0FBQ0csVUFBVSxDQUFDRCxJQUFJLENBQUM7SUFDbEMsQ0FBQyxDQUFDLE9BQU9FLEtBQUssRUFBRTtNQUNkLE1BQU0sSUFBSUMsc0JBQWMsQ0FBQywrQkFBbUIsRUFBQ0QsS0FBSyxDQUFDLEVBQUVILFdBQVcsQ0FBQztJQUNuRTtFQUNGLENBQUM7QUFBQTtBQUVILElBQU1LLG1CQUFtQixHQUN2Qk4sU0FESU0sbUJBQW1CLENBQ3ZCTixRQUEyQjtFQUFBLE9BRTNCLFNBQVNPLGNBQWMsQ0FBQ0wsSUFBOEIsRUFBRTtJQUN0RCxJQUFNTSxPQUFPLEdBQUdSLFFBQVEsQ0FBQ1MsYUFBYSxDQUFDUCxJQUFJLENBQUM7SUFDNUMsSUFBSU0sT0FBTyxDQUFDRSxNQUFNLEtBQUssQ0FBQyxFQUFFO01BQ3hCLE1BQU0sSUFBSUwsc0JBQWMsQ0FBQyxvQkFBb0IsRUFBRUUsY0FBYyxDQUFDO0lBQ2hFO0lBQ0EsT0FBT0MsT0FBTztFQUNoQixDQUFDO0FBQUE7QUFFSCxJQUFNRyxrQkFBa0IsR0FDdEJYLFNBRElXLGtCQUFrQixDQUN0QlgsUUFBMkI7RUFBQSxPQUUzQixTQUFTWSxhQUFhLENBQUNWLElBQThCLEVBQUU7SUFDckQsSUFBSTtNQUNGLE9BQU9ILGdCQUFnQixDQUFDQyxRQUFRLENBQUMsQ0FBQ0UsSUFBSSxDQUFDO0lBQ3pDLENBQUMsQ0FBQyxPQUFPRSxLQUFLLEVBQUU7TUFDZCxPQUFPLDhCQUFrQixFQUFDQSxLQUFLLEVBQUVRLGFBQWEsQ0FBQztJQUNqRDtFQUNGLENBQUM7QUFBQTtBQUVILElBQU1DLHFCQUFxQixHQUV2QmIsU0FGRWEscUJBQXFCLENBRXZCYixRQUEyQjtFQUFBLE9BRTVCRSxjQUE4QixFQUFLO0lBQ2xDLElBQUk7TUFDRixPQUFPSSxtQkFBbUIsQ0FBQ04sUUFBUSxDQUFDLENBQUNFLElBQUksQ0FBQztJQUM1QyxDQUFDLENBQUMsT0FBT0UsS0FBSyxFQUFFO01BQ2QsT0FBTyxFQUFFO0lBQ1g7RUFDRixDQUFDO0FBQUE7QUFpQkksSUFBTVUsdUJBQXVCLEdBQ2xDZCxTQURXYyx1QkFBdUIsQ0FDbENkLFFBQTJCO0VBQUEsT0FDRjtJQUN6QkQsZ0JBQWdCLEVBQUVBLGdCQUFnQixDQUFDQyxRQUFRLENBQUM7SUFDNUNNLG1CQUFtQixFQUFFQSxtQkFBbUIsQ0FBQ04sUUFBUSxDQUFDO0lBQ2xEVyxrQkFBa0IsRUFBRUEsa0JBQWtCLENBQUNYLFFBQVEsQ0FBQztJQUNoRGEscUJBQXFCLEVBQUVBLHFCQUFxQixDQUFDYixRQUFRO0VBQ3ZELENBQUM7QUFBQSxDQUFDO0FBQUNlIiwibmFtZXMiOlsiVU5TQUZFX2dldEJ5VHlwZSIsImluc3RhbmNlIiwiZ2V0QnlUeXBlRm4iLCJ0eXBlIiwiZmluZEJ5VHlwZSIsImVycm9yIiwiRXJyb3JXaXRoU3RhY2siLCJVTlNBRkVfZ2V0QWxsQnlUeXBlIiwiZ2V0QWxsQnlUeXBlRm4iLCJyZXN1bHRzIiwiZmluZEFsbEJ5VHlwZSIsImxlbmd0aCIsIlVOU0FGRV9xdWVyeUJ5VHlwZSIsInF1ZXJ5QnlUeXBlRm4iLCJVTlNBRkVfcXVlcnlBbGxCeVR5cGUiLCJiaW5kVW5zYWZlQnlUeXBlUXVlcmllcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVlcmllcy91bnNhZmVUeXBlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgUmVhY3RUZXN0SW5zdGFuY2UgfSBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEVycm9yV2l0aFN0YWNrLCBwcmVwYXJlRXJyb3JNZXNzYWdlIH0gZnJvbSAnLi4vaGVscGVycy9lcnJvcnMnO1xuaW1wb3J0IHsgY3JlYXRlUXVlcnlCeUVycm9yIH0gZnJvbSAnLi4vaGVscGVycy9lcnJvcnMnO1xuXG5jb25zdCBVTlNBRkVfZ2V0QnlUeXBlID0gKFxuICBpbnN0YW5jZTogUmVhY3RUZXN0SW5zdGFuY2Vcbik6ICgodHlwZTogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+KSA9PiBSZWFjdFRlc3RJbnN0YW5jZSkgPT5cbiAgZnVuY3Rpb24gZ2V0QnlUeXBlRm4odHlwZTogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+KSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBpbnN0YW5jZS5maW5kQnlUeXBlKHR5cGUpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3JXaXRoU3RhY2socHJlcGFyZUVycm9yTWVzc2FnZShlcnJvciksIGdldEJ5VHlwZUZuKTtcbiAgICB9XG4gIH07XG5cbmNvbnN0IFVOU0FGRV9nZXRBbGxCeVR5cGUgPSAoXG4gIGluc3RhbmNlOiBSZWFjdFRlc3RJbnN0YW5jZVxuKTogKCh0eXBlOiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT4pID0+IEFycmF5PFJlYWN0VGVzdEluc3RhbmNlPikgPT5cbiAgZnVuY3Rpb24gZ2V0QWxsQnlUeXBlRm4odHlwZTogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+KSB7XG4gICAgY29uc3QgcmVzdWx0cyA9IGluc3RhbmNlLmZpbmRBbGxCeVR5cGUodHlwZSk7XG4gICAgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3JXaXRoU3RhY2soJ05vIGluc3RhbmNlcyBmb3VuZCcsIGdldEFsbEJ5VHlwZUZuKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdHM7XG4gIH07XG5cbmNvbnN0IFVOU0FGRV9xdWVyeUJ5VHlwZSA9IChcbiAgaW5zdGFuY2U6IFJlYWN0VGVzdEluc3RhbmNlXG4pOiAoKHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PikgPT4gUmVhY3RUZXN0SW5zdGFuY2UgfCBudWxsKSA9PlxuICBmdW5jdGlvbiBxdWVyeUJ5VHlwZUZuKHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55Pikge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gVU5TQUZFX2dldEJ5VHlwZShpbnN0YW5jZSkodHlwZSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHJldHVybiBjcmVhdGVRdWVyeUJ5RXJyb3IoZXJyb3IsIHF1ZXJ5QnlUeXBlRm4pO1xuICAgIH1cbiAgfTtcblxuY29uc3QgVU5TQUZFX3F1ZXJ5QWxsQnlUeXBlID1cbiAgKFxuICAgIGluc3RhbmNlOiBSZWFjdFRlc3RJbnN0YW5jZVxuICApOiAoKHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PikgPT4gQXJyYXk8UmVhY3RUZXN0SW5zdGFuY2U+KSA9PlxuICAodHlwZTogUmVhY3QuQ29tcG9uZW50VHlwZTxhbnk+KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBVTlNBRkVfZ2V0QWxsQnlUeXBlKGluc3RhbmNlKSh0eXBlKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgfTtcblxuLy8gVW5zYWZlIGFsaWFzZXNcbmV4cG9ydCB0eXBlIFVuc2FmZUJ5VHlwZVF1ZXJpZXMgPSB7XG4gIFVOU0FGRV9nZXRCeVR5cGU6IDxQPih0eXBlOiBSZWFjdC5Db21wb25lbnRUeXBlPFA+KSA9PiBSZWFjdFRlc3RJbnN0YW5jZTtcbiAgVU5TQUZFX2dldEFsbEJ5VHlwZTogPFA+KFxuICAgIHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8UD5cbiAgKSA9PiBBcnJheTxSZWFjdFRlc3RJbnN0YW5jZT47XG4gIFVOU0FGRV9xdWVyeUJ5VHlwZTogPFA+KFxuICAgIHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8UD5cbiAgKSA9PiBSZWFjdFRlc3RJbnN0YW5jZSB8IG51bGw7XG4gIFVOU0FGRV9xdWVyeUFsbEJ5VHlwZTogPFA+KFxuICAgIHR5cGU6IFJlYWN0LkNvbXBvbmVudFR5cGU8UD5cbiAgKSA9PiBBcnJheTxSZWFjdFRlc3RJbnN0YW5jZT47XG59O1xuXG4vLyBUT0RPOiBtaWdyYXRlIHRvIG1ha2VRdWVyaWVzIHBhdHRlcm5cbmV4cG9ydCBjb25zdCBiaW5kVW5zYWZlQnlUeXBlUXVlcmllcyA9IChcbiAgaW5zdGFuY2U6IFJlYWN0VGVzdEluc3RhbmNlXG4pOiBVbnNhZmVCeVR5cGVRdWVyaWVzID0+ICh7XG4gIFVOU0FGRV9nZXRCeVR5cGU6IFVOU0FGRV9nZXRCeVR5cGUoaW5zdGFuY2UpLFxuICBVTlNBRkVfZ2V0QWxsQnlUeXBlOiBVTlNBRkVfZ2V0QWxsQnlUeXBlKGluc3RhbmNlKSxcbiAgVU5TQUZFX3F1ZXJ5QnlUeXBlOiBVTlNBRkVfcXVlcnlCeVR5cGUoaW5zdGFuY2UpLFxuICBVTlNBRkVfcXVlcnlBbGxCeVR5cGU6IFVOU0FGRV9xdWVyeUFsbEJ5VHlwZShpbnN0YW5jZSksXG59KTtcbiJdfQ==