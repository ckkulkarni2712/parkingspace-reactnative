{"version":3,"mappings":";;;;;;;;AAAA;AAA+B;EAAA;EAAA;EAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;EAAA;IAAA;MAAAA;IAAA;EAAA;EAAA;EAAA;IAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAA;MAAA;QAAAC;MAAA;QAAAC;MAAA;IAAA;EAAA;EAAAA;EAAA;IAAAC;EAAA;EAAA;AAAA;AAExB,SAASC,wBAAwB,CACtCC,KAAa,EACbC,KAAa,EACJ;EACT,IAAIC,KAAK,CAACC,OAAO,KAAKC,SAAS,EAAE,OAAO,KAAK;EAC7C,4BAAmCF,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAAA;IAAhEC,WAAW;IAAEC,WAAW;EAE/B,OAAOD,WAAW,GAAGR,KAAK,IAAKQ,WAAW,KAAKR,KAAK,IAAIS,WAAW,IAAIR,KAAM;AAC/E","names":["default","Object","newObj","cache","checkReactVersionAtLeast","major","minor","React","version","undefined","split","map","Number","actualMajor","actualMinor"],"sources":["../src/react-versions.ts"],"sourcesContent":["import * as React from 'react';\n\nexport function checkReactVersionAtLeast(\n  major: number,\n  minor: number\n): boolean {\n  if (React.version === undefined) return false;\n  const [actualMajor, actualMinor] = React.version.split('.').map(Number);\n\n  return actualMajor > major || (actualMajor === major && actualMinor >= minor);\n}\n"]}