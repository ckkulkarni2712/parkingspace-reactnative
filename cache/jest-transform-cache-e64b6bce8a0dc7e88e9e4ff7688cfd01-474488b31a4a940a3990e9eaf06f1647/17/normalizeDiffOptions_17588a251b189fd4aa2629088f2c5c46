8cd309772acd49539cd82a63014eeeb5
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.normalizeDiffOptions = exports.noColor = void 0;
var _chalk = _interopRequireDefault(require('chalk'));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var noColor = function noColor(string) {
  return string;
};
exports.noColor = noColor;
var DIFF_CONTEXT_DEFAULT = 5;
var OPTIONS_DEFAULT = {
  aAnnotation: 'Expected',
  aColor: _chalk.default.green,
  aIndicator: '-',
  bAnnotation: 'Received',
  bColor: _chalk.default.red,
  bIndicator: '+',
  changeColor: _chalk.default.inverse,
  changeLineTrailingSpaceColor: noColor,
  commonColor: _chalk.default.dim,
  commonIndicator: ' ',
  commonLineTrailingSpaceColor: noColor,
  compareKeys: undefined,
  contextLines: DIFF_CONTEXT_DEFAULT,
  emptyFirstOrLastLinePlaceholder: '',
  expand: true,
  includeChangeCounts: false,
  omitAnnotationLines: false,
  patchColor: _chalk.default.yellow
};
var getCompareKeys = function getCompareKeys(compareKeys) {
  return compareKeys && typeof compareKeys === 'function' ? compareKeys : OPTIONS_DEFAULT.compareKeys;
};
var getContextLines = function getContextLines(contextLines) {
  return typeof contextLines === 'number' && Number.isSafeInteger(contextLines) && contextLines >= 0 ? contextLines : DIFF_CONTEXT_DEFAULT;
};
var normalizeDiffOptions = function normalizeDiffOptions() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return Object.assign({}, OPTIONS_DEFAULT, options, {
    compareKeys: getCompareKeys(options.compareKeys),
    contextLines: getContextLines(options.contextLines)
  });
};
exports.normalizeDiffOptions = normalizeDiffOptions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIm5vcm1hbGl6ZURpZmZPcHRpb25zIiwibm9Db2xvciIsIl9jaGFsayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJzdHJpbmciLCJESUZGX0NPTlRFWFRfREVGQVVMVCIsIk9QVElPTlNfREVGQVVMVCIsImFBbm5vdGF0aW9uIiwiYUNvbG9yIiwiZ3JlZW4iLCJhSW5kaWNhdG9yIiwiYkFubm90YXRpb24iLCJiQ29sb3IiLCJyZWQiLCJiSW5kaWNhdG9yIiwiY2hhbmdlQ29sb3IiLCJpbnZlcnNlIiwiY2hhbmdlTGluZVRyYWlsaW5nU3BhY2VDb2xvciIsImNvbW1vbkNvbG9yIiwiZGltIiwiY29tbW9uSW5kaWNhdG9yIiwiY29tbW9uTGluZVRyYWlsaW5nU3BhY2VDb2xvciIsImNvbXBhcmVLZXlzIiwidW5kZWZpbmVkIiwiY29udGV4dExpbmVzIiwiZW1wdHlGaXJzdE9yTGFzdExpbmVQbGFjZWhvbGRlciIsImV4cGFuZCIsImluY2x1ZGVDaGFuZ2VDb3VudHMiLCJvbWl0QW5ub3RhdGlvbkxpbmVzIiwicGF0Y2hDb2xvciIsInllbGxvdyIsImdldENvbXBhcmVLZXlzIiwiZ2V0Q29udGV4dExpbmVzIiwiTnVtYmVyIiwiaXNTYWZlSW50ZWdlciIsIm9wdGlvbnMiXSwic291cmNlcyI6WyJub3JtYWxpemVEaWZmT3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5ub3JtYWxpemVEaWZmT3B0aW9ucyA9IGV4cG9ydHMubm9Db2xvciA9IHZvaWQgMDtcbnZhciBfY2hhbGsgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoJ2NoYWxrJykpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtkZWZhdWx0OiBvYmp9O1xufVxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmNvbnN0IG5vQ29sb3IgPSBzdHJpbmcgPT4gc3RyaW5nO1xuZXhwb3J0cy5ub0NvbG9yID0gbm9Db2xvcjtcbmNvbnN0IERJRkZfQ09OVEVYVF9ERUZBVUxUID0gNTtcbmNvbnN0IE9QVElPTlNfREVGQVVMVCA9IHtcbiAgYUFubm90YXRpb246ICdFeHBlY3RlZCcsXG4gIGFDb2xvcjogX2NoYWxrLmRlZmF1bHQuZ3JlZW4sXG4gIGFJbmRpY2F0b3I6ICctJyxcbiAgYkFubm90YXRpb246ICdSZWNlaXZlZCcsXG4gIGJDb2xvcjogX2NoYWxrLmRlZmF1bHQucmVkLFxuICBiSW5kaWNhdG9yOiAnKycsXG4gIGNoYW5nZUNvbG9yOiBfY2hhbGsuZGVmYXVsdC5pbnZlcnNlLFxuICBjaGFuZ2VMaW5lVHJhaWxpbmdTcGFjZUNvbG9yOiBub0NvbG9yLFxuICBjb21tb25Db2xvcjogX2NoYWxrLmRlZmF1bHQuZGltLFxuICBjb21tb25JbmRpY2F0b3I6ICcgJyxcbiAgY29tbW9uTGluZVRyYWlsaW5nU3BhY2VDb2xvcjogbm9Db2xvcixcbiAgY29tcGFyZUtleXM6IHVuZGVmaW5lZCxcbiAgY29udGV4dExpbmVzOiBESUZGX0NPTlRFWFRfREVGQVVMVCxcbiAgZW1wdHlGaXJzdE9yTGFzdExpbmVQbGFjZWhvbGRlcjogJycsXG4gIGV4cGFuZDogdHJ1ZSxcbiAgaW5jbHVkZUNoYW5nZUNvdW50czogZmFsc2UsXG4gIG9taXRBbm5vdGF0aW9uTGluZXM6IGZhbHNlLFxuICBwYXRjaENvbG9yOiBfY2hhbGsuZGVmYXVsdC55ZWxsb3dcbn07XG5jb25zdCBnZXRDb21wYXJlS2V5cyA9IGNvbXBhcmVLZXlzID0+XG4gIGNvbXBhcmVLZXlzICYmIHR5cGVvZiBjb21wYXJlS2V5cyA9PT0gJ2Z1bmN0aW9uJ1xuICAgID8gY29tcGFyZUtleXNcbiAgICA6IE9QVElPTlNfREVGQVVMVC5jb21wYXJlS2V5cztcbmNvbnN0IGdldENvbnRleHRMaW5lcyA9IGNvbnRleHRMaW5lcyA9PlxuICB0eXBlb2YgY29udGV4dExpbmVzID09PSAnbnVtYmVyJyAmJlxuICBOdW1iZXIuaXNTYWZlSW50ZWdlcihjb250ZXh0TGluZXMpICYmXG4gIGNvbnRleHRMaW5lcyA+PSAwXG4gICAgPyBjb250ZXh0TGluZXNcbiAgICA6IERJRkZfQ09OVEVYVF9ERUZBVUxUO1xuXG4vLyBQdXJlIGZ1bmN0aW9uIHJldHVybnMgb3B0aW9ucyB3aXRoIGFsbCBwcm9wZXJ0aWVzLlxuY29uc3Qgbm9ybWFsaXplRGlmZk9wdGlvbnMgPSAob3B0aW9ucyA9IHt9KSA9PiAoe1xuICAuLi5PUFRJT05TX0RFRkFVTFQsXG4gIC4uLm9wdGlvbnMsXG4gIGNvbXBhcmVLZXlzOiBnZXRDb21wYXJlS2V5cyhvcHRpb25zLmNvbXBhcmVLZXlzKSxcbiAgY29udGV4dExpbmVzOiBnZXRDb250ZXh0TGluZXMob3B0aW9ucy5jb250ZXh0TGluZXMpXG59KTtcbmV4cG9ydHMubm9ybWFsaXplRGlmZk9wdGlvbnMgPSBub3JtYWxpemVEaWZmT3B0aW9ucztcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWkEsTUFBTSxDQUFDQyxjQUFjLENBQUNDLE9BQU8sRUFBRSxZQUFZLEVBQUU7RUFDM0NDLEtBQUssRUFBRTtBQUNULENBQUMsQ0FBQztBQUNGRCxPQUFPLENBQUNFLG9CQUFvQixHQUFHRixPQUFPLENBQUNHLE9BQU8sR0FBRyxLQUFLLENBQUM7QUFDdkQsSUFBSUMsTUFBTSxHQUFHQyxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ3JELFNBQVNELHNCQUFzQixDQUFDRSxHQUFHLEVBQUU7RUFDbkMsT0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVUsR0FBR0QsR0FBRyxHQUFHO0lBQUNFLE9BQU8sRUFBRUY7RUFBRyxDQUFDO0FBQ3JEO0FBUUEsSUFBTUosT0FBTyxHQUFHLFNBQVZBLE9BQU8sQ0FBR08sTUFBTTtFQUFBLE9BQUlBLE1BQU07QUFBQTtBQUNoQ1YsT0FBTyxDQUFDRyxPQUFPLEdBQUdBLE9BQU87QUFDekIsSUFBTVEsb0JBQW9CLEdBQUcsQ0FBQztBQUM5QixJQUFNQyxlQUFlLEdBQUc7RUFDdEJDLFdBQVcsRUFBRSxVQUFVO0VBQ3ZCQyxNQUFNLEVBQUVWLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDTSxLQUFLO0VBQzVCQyxVQUFVLEVBQUUsR0FBRztFQUNmQyxXQUFXLEVBQUUsVUFBVTtFQUN2QkMsTUFBTSxFQUFFZCxNQUFNLENBQUNLLE9BQU8sQ0FBQ1UsR0FBRztFQUMxQkMsVUFBVSxFQUFFLEdBQUc7RUFDZkMsV0FBVyxFQUFFakIsTUFBTSxDQUFDSyxPQUFPLENBQUNhLE9BQU87RUFDbkNDLDRCQUE0QixFQUFFcEIsT0FBTztFQUNyQ3FCLFdBQVcsRUFBRXBCLE1BQU0sQ0FBQ0ssT0FBTyxDQUFDZ0IsR0FBRztFQUMvQkMsZUFBZSxFQUFFLEdBQUc7RUFDcEJDLDRCQUE0QixFQUFFeEIsT0FBTztFQUNyQ3lCLFdBQVcsRUFBRUMsU0FBUztFQUN0QkMsWUFBWSxFQUFFbkIsb0JBQW9CO0VBQ2xDb0IsK0JBQStCLEVBQUUsRUFBRTtFQUNuQ0MsTUFBTSxFQUFFLElBQUk7RUFDWkMsbUJBQW1CLEVBQUUsS0FBSztFQUMxQkMsbUJBQW1CLEVBQUUsS0FBSztFQUMxQkMsVUFBVSxFQUFFL0IsTUFBTSxDQUFDSyxPQUFPLENBQUMyQjtBQUM3QixDQUFDO0FBQ0QsSUFBTUMsY0FBYyxHQUFHLFNBQWpCQSxjQUFjLENBQUdULFdBQVc7RUFBQSxPQUNoQ0EsV0FBVyxJQUFJLE9BQU9BLFdBQVcsS0FBSyxVQUFVLEdBQzVDQSxXQUFXLEdBQ1hoQixlQUFlLENBQUNnQixXQUFXO0FBQUE7QUFDakMsSUFBTVUsZUFBZSxHQUFHLFNBQWxCQSxlQUFlLENBQUdSLFlBQVk7RUFBQSxPQUNsQyxPQUFPQSxZQUFZLEtBQUssUUFBUSxJQUNoQ1MsTUFBTSxDQUFDQyxhQUFhLENBQUNWLFlBQVksQ0FBQyxJQUNsQ0EsWUFBWSxJQUFJLENBQUMsR0FDYkEsWUFBWSxHQUNabkIsb0JBQW9CO0FBQUE7QUFHMUIsSUFBTVQsb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUFvQjtFQUFBLElBQUl1QyxPQUFPLHVFQUFHLENBQUMsQ0FBQztFQUFBLHlCQUNyQzdCLGVBQWUsRUFDZjZCLE9BQU87SUFDVmIsV0FBVyxFQUFFUyxjQUFjLENBQUNJLE9BQU8sQ0FBQ2IsV0FBVyxDQUFDO0lBQ2hERSxZQUFZLEVBQUVRLGVBQWUsQ0FBQ0csT0FBTyxDQUFDWCxZQUFZO0VBQUM7QUFBQSxDQUNuRDtBQUNGOUIsT0FBTyxDQUFDRSxvQkFBb0IsR0FBR0Esb0JBQW9CIn0=