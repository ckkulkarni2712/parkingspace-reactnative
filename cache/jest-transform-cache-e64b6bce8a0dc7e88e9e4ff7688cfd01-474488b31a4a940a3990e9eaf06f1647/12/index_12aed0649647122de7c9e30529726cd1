0d957fe9f796943602ee676e271ccb7d
"use strict";

module.exports = asPromise;
function asPromise(fn, ctx) {
  var params = new Array(arguments.length - 1),
    offset = 0,
    index = 2,
    pending = true;
  while (index < arguments.length) params[offset++] = arguments[index++];
  return new Promise(function executor(resolve, reject) {
    params[offset] = function callback(err) {
      if (pending) {
        pending = false;
        if (err) reject(err);else {
          var params = new Array(arguments.length - 1),
            offset = 0;
          while (offset < params.length) params[offset++] = arguments[offset];
          resolve.apply(null, params);
        }
      }
    };
    try {
      fn.apply(ctx || null, params);
    } catch (err) {
      if (pending) {
        pending = false;
        reject(err);
      }
    }
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXNQcm9taXNlIiwiZm4iLCJjdHgiLCJwYXJhbXMiLCJBcnJheSIsImFyZ3VtZW50cyIsImxlbmd0aCIsIm9mZnNldCIsImluZGV4IiwicGVuZGluZyIsIlByb21pc2UiLCJleGVjdXRvciIsInJlc29sdmUiLCJyZWplY3QiLCJjYWxsYmFjayIsImVyciIsImFwcGx5Il0sInNvdXJjZXMiOlsiaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbm1vZHVsZS5leHBvcnRzID0gYXNQcm9taXNlO1xyXG5cclxuLyoqXHJcbiAqIENhbGxiYWNrIGFzIHVzZWQgYnkge0BsaW5rIHV0aWwuYXNQcm9taXNlfS5cclxuICogQHR5cGVkZWYgYXNQcm9taXNlQ2FsbGJhY2tcclxuICogQHR5cGUge2Z1bmN0aW9ufVxyXG4gKiBAcGFyYW0ge0Vycm9yfG51bGx9IGVycm9yIEVycm9yLCBpZiBhbnlcclxuICogQHBhcmFtIHsuLi4qfSBwYXJhbXMgQWRkaXRpb25hbCBhcmd1bWVudHNcclxuICogQHJldHVybnMge3VuZGVmaW5lZH1cclxuICovXHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIHByb21pc2UgZnJvbSBhIG5vZGUtc3R5bGUgY2FsbGJhY2sgZnVuY3Rpb24uXHJcbiAqIEBtZW1iZXJvZiB1dGlsXHJcbiAqIEBwYXJhbSB7YXNQcm9taXNlQ2FsbGJhY2t9IGZuIEZ1bmN0aW9uIHRvIGNhbGxcclxuICogQHBhcmFtIHsqfSBjdHggRnVuY3Rpb24gY29udGV4dFxyXG4gKiBAcGFyYW0gey4uLip9IHBhcmFtcyBGdW5jdGlvbiBhcmd1bWVudHNcclxuICogQHJldHVybnMge1Byb21pc2U8Kj59IFByb21pc2lmaWVkIGZ1bmN0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiBhc1Byb21pc2UoZm4sIGN0eC8qLCB2YXJhcmdzICovKSB7XHJcbiAgICB2YXIgcGFyYW1zICA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSksXHJcbiAgICAgICAgb2Zmc2V0ICA9IDAsXHJcbiAgICAgICAgaW5kZXggICA9IDIsXHJcbiAgICAgICAgcGVuZGluZyA9IHRydWU7XHJcbiAgICB3aGlsZSAoaW5kZXggPCBhcmd1bWVudHMubGVuZ3RoKVxyXG4gICAgICAgIHBhcmFtc1tvZmZzZXQrK10gPSBhcmd1bWVudHNbaW5kZXgrK107XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZXhlY3V0b3IocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgcGFyYW1zW29mZnNldF0gPSBmdW5jdGlvbiBjYWxsYmFjayhlcnIvKiwgdmFyYXJncyAqLykge1xyXG4gICAgICAgICAgICBpZiAocGVuZGluZykge1xyXG4gICAgICAgICAgICAgICAgcGVuZGluZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGVycilcclxuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyKTtcclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBwYXJhbXMgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvZmZzZXQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChvZmZzZXQgPCBwYXJhbXMubGVuZ3RoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXNbb2Zmc2V0KytdID0gYXJndW1lbnRzW29mZnNldF07XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZS5hcHBseShudWxsLCBwYXJhbXMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBmbi5hcHBseShjdHggfHwgbnVsbCwgcGFyYW1zKTtcclxuICAgICAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICAgICAgaWYgKHBlbmRpbmcpIHtcclxuICAgICAgICAgICAgICAgIHBlbmRpbmcgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHJlamVjdChlcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaQSxNQUFNLENBQUNDLE9BQU8sR0FBR0MsU0FBUztBQW1CMUIsU0FBU0EsU0FBUyxDQUFDQyxFQUFFLEVBQUVDLEdBQUcsRUFBZ0I7RUFDdEMsSUFBSUMsTUFBTSxHQUFJLElBQUlDLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ3pDQyxNQUFNLEdBQUksQ0FBQztJQUNYQyxLQUFLLEdBQUssQ0FBQztJQUNYQyxPQUFPLEdBQUcsSUFBSTtFQUNsQixPQUFPRCxLQUFLLEdBQUdILFNBQVMsQ0FBQ0MsTUFBTSxFQUMzQkgsTUFBTSxDQUFDSSxNQUFNLEVBQUUsQ0FBQyxHQUFHRixTQUFTLENBQUNHLEtBQUssRUFBRSxDQUFDO0VBQ3pDLE9BQU8sSUFBSUUsT0FBTyxDQUFDLFNBQVNDLFFBQVEsQ0FBQ0MsT0FBTyxFQUFFQyxNQUFNLEVBQUU7SUFDbERWLE1BQU0sQ0FBQ0ksTUFBTSxDQUFDLEdBQUcsU0FBU08sUUFBUSxDQUFDQyxHQUFHLEVBQWdCO01BQ2xELElBQUlOLE9BQU8sRUFBRTtRQUNUQSxPQUFPLEdBQUcsS0FBSztRQUNmLElBQUlNLEdBQUcsRUFDSEYsTUFBTSxDQUFDRSxHQUFHLENBQUMsQ0FBQyxLQUNYO1VBQ0QsSUFBSVosTUFBTSxHQUFHLElBQUlDLEtBQUssQ0FBQ0MsU0FBUyxDQUFDQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBQ3hDQyxNQUFNLEdBQUcsQ0FBQztVQUNkLE9BQU9BLE1BQU0sR0FBR0osTUFBTSxDQUFDRyxNQUFNLEVBQ3pCSCxNQUFNLENBQUNJLE1BQU0sRUFBRSxDQUFDLEdBQUdGLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDO1VBQ3hDSyxPQUFPLENBQUNJLEtBQUssQ0FBQyxJQUFJLEVBQUViLE1BQU0sQ0FBQztRQUMvQjtNQUNKO0lBQ0osQ0FBQztJQUNELElBQUk7TUFDQUYsRUFBRSxDQUFDZSxLQUFLLENBQUNkLEdBQUcsSUFBSSxJQUFJLEVBQUVDLE1BQU0sQ0FBQztJQUNqQyxDQUFDLENBQUMsT0FBT1ksR0FBRyxFQUFFO01BQ1YsSUFBSU4sT0FBTyxFQUFFO1FBQ1RBLE9BQU8sR0FBRyxLQUFLO1FBQ2ZJLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDO01BQ2Y7SUFDSjtFQUNKLENBQUMsQ0FBQztBQUNOIn0=