{"version":3,"names":["exports","__esModule","useReduxContext","_react","require","_Context","contextValue","useContext","ReactReduxContext","process","env","NODE_ENV","Error"],"sources":["useReduxContext.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.useReduxContext = useReduxContext;\n\nvar _react = require(\"react\");\n\nvar _Context = require(\"../components/Context\");\n\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\nfunction useReduxContext() {\n  const contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\n\n  if (process.env.NODE_ENV !== 'production' && !contextValue) {\n    throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  }\n\n  return contextValue;\n}"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,eAAe,GAAGA,eAAe;AAEzC,IAAIC,MAAM,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE7B,IAAIC,QAAQ,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAkB/C,SAASF,eAAe,GAAG;EACzB,IAAMI,YAAY,GAAG,CAAC,CAAC,EAAEH,MAAM,CAACI,UAAU,EAAEF,QAAQ,CAACG,iBAAiB,CAAC;EAEvE,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,CAACL,YAAY,EAAE;IAC1D,MAAM,IAAIM,KAAK,CAAC,kGAAkG,CAAC;EACrH;EAEA,OAAON,YAAY;AACrB"}