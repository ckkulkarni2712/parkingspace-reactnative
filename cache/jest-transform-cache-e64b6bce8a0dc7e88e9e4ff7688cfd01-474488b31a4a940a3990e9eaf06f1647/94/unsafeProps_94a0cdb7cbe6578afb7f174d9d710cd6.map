{"version":3,"mappings":";;;;;;AACA;AACA;AAAwE;EAAA;IAAAA;EAAA;AAAA;AAGxE,IAAMC,iBAAiB,GACrBC,SADID,iBAAiB,CACrBC,QAA2B;EAAA,OAE3B,SAASC,YAAY,CAACC,KAAkC,EAAE;IACxD,IAAI;MACF,OAAOF,QAAQ,CAACG,WAAW,CAACD,KAAK,CAAC;IACpC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,MAAM,IAAIC,sBAAc,CAAC,+BAAmB,EAACD,KAAK,CAAC,EAAEH,YAAY,CAAC;IACpE;EACF,CAAC;AAAA;AAEH,IAAMK,oBAAoB,GACxBN,SADIM,oBAAoB,CACxBN,QAA2B;EAAA,OAE3B,SAASO,eAAe,CAACL,KAAkC,EAAE;IAC3D,IAAMM,OAAO,GAAGR,QAAQ,CAACS,cAAc,CAACP,KAAK,CAAC;IAC9C,IAAIM,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;MACxB,MAAM,IAAIL,sBAAc,sCACa,yBAAY,EAACH,KAAK,CAAE,EACvDK,eAAe,CAChB;IACH;IACA,OAAOC,OAAO;EAChB,CAAC;AAAA;AAEH,IAAMG,mBAAmB,GACvBX,SADIW,mBAAmB,CACvBX,QAA2B;EAAA,OAE3B,SAASY,cAAc,CAACV,KAAkC,EAAE;IAC1D,IAAI;MACF,OAAOH,iBAAiB,CAACC,QAAQ,CAAC,CAACE,KAAK,CAAC;IAC3C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,OAAO,8BAAkB,EAACA,KAAK,EAAEQ,cAAc,CAAC;IAClD;EACF,CAAC;AAAA;AAEH,IAAMC,sBAAsB,GAExBb,SAFEa,sBAAsB,CAExBb,QAA2B;EAAA,OAE5BE,eAAkC,EAAK;IACtC,IAAI;MACF,OAAOI,oBAAoB,CAACN,QAAQ,CAAC,CAACE,KAAK,CAAC;IAC9C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,OAAO,EAAE;IACX;EACF,CAAC;AAAA;AAiBI,IAAMU,wBAAwB,GACnCd,SADWc,wBAAwB,CACnCd,QAA2B;EAAA,OACD;IAC1BD,iBAAiB,EAAEA,iBAAiB,CAACC,QAAQ,CAAC;IAC9CM,oBAAoB,EAAEA,oBAAoB,CAACN,QAAQ,CAAC;IACpDW,mBAAmB,EAAEA,mBAAmB,CAACX,QAAQ,CAAC;IAClDa,sBAAsB,EAAEA,sBAAsB,CAACb,QAAQ;EACzD,CAAC;AAAA,CAAC;AAACe","names":["default","UNSAFE_getByProps","instance","getByPropsFn","props","findByProps","error","ErrorWithStack","UNSAFE_getAllByProps","getAllByPropsFn","results","findAllByProps","length","UNSAFE_queryByProps","queryByPropsFn","UNSAFE_queryAllByProps","bindUnsafeByPropsQueries","exports"],"sources":["../../src/queries/unsafeProps.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport prettyFormat from 'pretty-format';\nimport { ErrorWithStack, prepareErrorMessage } from '../helpers/errors';\nimport { createQueryByError } from '../helpers/errors';\n\nconst UNSAFE_getByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => ReactTestInstance) =>\n  function getByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return instance.findByProps(props);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByPropsFn);\n    }\n  };\n\nconst UNSAFE_getAllByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => Array<ReactTestInstance>) =>\n  function getAllByPropsFn(props: { [propName: string]: any }) {\n    const results = instance.findAllByProps(props);\n    if (results.length === 0) {\n      throw new ErrorWithStack(\n        `No instances found with props:\\n${prettyFormat(props)}`,\n        getAllByPropsFn\n      );\n    }\n    return results;\n  };\n\nconst UNSAFE_queryByProps = (\n  instance: ReactTestInstance\n): ((props: { [propName: string]: any }) => ReactTestInstance | null) =>\n  function queryByPropsFn(props: { [propName: string]: any }) {\n    try {\n      return UNSAFE_getByProps(instance)(props);\n    } catch (error) {\n      return createQueryByError(error, queryByPropsFn);\n    }\n  };\n\nconst UNSAFE_queryAllByProps =\n  (\n    instance: ReactTestInstance\n  ): ((props: { [propName: string]: any }) => Array<ReactTestInstance>) =>\n  (props: { [propName: string]: any }) => {\n    try {\n      return UNSAFE_getAllByProps(instance)(props);\n    } catch (error) {\n      return [];\n    }\n  };\n\n// Unsafe aliases\nexport type UnsafeByPropsQueries = {\n  UNSAFE_getByProps: (props: { [key: string]: any }) => ReactTestInstance;\n  UNSAFE_getAllByProps: (props: {\n    [key: string]: any;\n  }) => Array<ReactTestInstance>;\n  UNSAFE_queryByProps: (props: {\n    [key: string]: any;\n  }) => ReactTestInstance | null;\n  UNSAFE_queryAllByProps: (props: {\n    [key: string]: any;\n  }) => Array<ReactTestInstance>;\n};\n\n// TODO: migrate to makeQueries pattern\nexport const bindUnsafeByPropsQueries = (\n  instance: ReactTestInstance\n): UnsafeByPropsQueries => ({\n  UNSAFE_getByProps: UNSAFE_getByProps(instance),\n  UNSAFE_getAllByProps: UNSAFE_getAllByProps(instance),\n  UNSAFE_queryByProps: UNSAFE_queryByProps(instance),\n  UNSAFE_queryAllByProps: UNSAFE_queryAllByProps(instance),\n});\n"]}